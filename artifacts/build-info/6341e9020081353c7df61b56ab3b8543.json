{
	"id": "6341e9020081353c7df61b56ab3b8543",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract-variableScope.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0 <0.9.0;\ncontract C {\n\n    /*\n    this examples will compile without warnings, since the two variables have the same name but disjoint scopes.\n    */\n    function minimalScoping() pure public {\n        {\n            uint same;\n            same = 1;\n        }\n\n        {\n            uint same;\n            same = 3;\n        }\n    }\n\n\n    /*\n     the first assignment to x will actually assign the outer and not the inner variable. \n     In any case, you will get a warning about the outer variable being shadowed.\n    */\n    function f() pure public returns (uint) {\n        uint x = 1;\n        {\n            x = 2; // this will assign to the outer variable\n            uint x;\n        }\n        return x; // x has value 2\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contract-variableScope.sol": {
				"C": {
					"abi": [
						{
							"inputs": [],
							"name": "f",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minimalScoping",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract-variableScope.sol\":68:788  contract C {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract-variableScope.sol\":68:788  contract C {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x26121ff0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5288d07f\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contract-variableScope.sol\":583:786  function f() pure public returns (uint) {... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-variableScope.sol\":213:389  function minimalScoping() pure public {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contract-variableScope.sol\":583:786  function f() pure public returns (uint) {... */\n    tag_6:\n        /* \"contract-variableScope.sol\":617:621  uint */\n      0x00\n        /* \"contract-variableScope.sol\":633:639  uint x */\n      dup1\n        /* \"contract-variableScope.sol\":642:643  1 */\n      0x01\n        /* \"contract-variableScope.sol\":633:643  uint x = 1 */\n      swap1\n      pop\n        /* \"contract-variableScope.sol\":671:672  2 */\n      0x02\n        /* \"contract-variableScope.sol\":667:672  x = 2 */\n      swap1\n      pop\n        /* \"contract-variableScope.sol\":761:762  x */\n      dup1\n        /* \"contract-variableScope.sol\":754:762  return x */\n      swap2\n      pop\n      pop\n        /* \"contract-variableScope.sol\":583:786  function f() pure public returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contract-variableScope.sol\":213:389  function minimalScoping() pure public {... */\n    tag_10:\n        /* \"contract-variableScope.sol\":275:284  uint same */\n      0x00\n        /* \"contract-variableScope.sol\":305:306  1 */\n      0x01\n        /* \"contract-variableScope.sol\":298:306  same = 1 */\n      swap1\n      pop\n        /* \"contract-variableScope.sol\":261:317  {... */\n      pop\n        /* \"contract-variableScope.sol\":341:350  uint same */\n      0x00\n        /* \"contract-variableScope.sol\":371:372  3 */\n      0x03\n        /* \"contract-variableScope.sol\":364:372  same = 3 */\n      swap1\n      pop\n        /* \"contract-variableScope.sol\":327:383  {... */\n      pop\n        /* \"contract-variableScope.sol\":213:389  function minimalScoping() pure public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_13:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_14:\n        /* \"#utility.yul\":177:201   */\n      tag_18\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_13\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_8:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_20\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_14\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209c6aa0ec4dcf3f6ade9d162da846904099383f4584e2f864c3f457c2790e746464736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060e18061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806326121ff01460375780635288d07f146051575b600080fd5b603d6059565b604051604891906092565b60405180910390f35b6057606b565b005b60008060019050600290508091505090565b6000600190505060006003905050565b6000819050919050565b608c81607b565b82525050565b600060208201905060a560008301846085565b9291505056fea26469706673582212209c6aa0ec4dcf3f6ade9d162da846904099383f4584e2f864c3f457c2790e746464736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE1 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26121FF0 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x5288D07F EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0x92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x57 PUSH1 0x6B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP PUSH1 0x2 SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP POP PUSH1 0x0 PUSH1 0x3 SWAP1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8C DUP2 PUSH1 0x7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xA5 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 PUSH11 0xA0EC4DCF3F6ADE9D162DA8 CHAINID SWAP1 BLOCKHASH SWAP10 CODESIZE EXTCODEHASH GASLIMIT DUP5 0xE2 0xF8 PUSH5 0xC3F457C279 0xE PUSH21 0x6464736F6C63430008120033000000000000000000 ",
							"sourceMap": "68:720:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@f_41": {
									"entryPoint": 89,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@minimalScoping_21": {
									"entryPoint": 107,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:439:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c806326121ff01460375780635288d07f146051575b600080fd5b603d6059565b604051604891906092565b60405180910390f35b6057606b565b005b60008060019050600290508091505090565b6000600190505060006003905050565b6000819050919050565b608c81607b565b82525050565b600060208201905060a560008301846085565b9291505056fea26469706673582212209c6aa0ec4dcf3f6ade9d162da846904099383f4584e2f864c3f457c2790e746464736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26121FF0 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x5288D07F EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0x92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x57 PUSH1 0x6B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP PUSH1 0x2 SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP POP PUSH1 0x0 PUSH1 0x3 SWAP1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8C DUP2 PUSH1 0x7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xA5 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 PUSH11 0xA0EC4DCF3F6ADE9D162DA8 CHAINID SWAP1 BLOCKHASH SWAP10 CODESIZE EXTCODEHASH GASLIMIT DUP5 0xE2 0xF8 PUSH5 0xC3F457C279 0xE PUSH21 0x6464736F6C63430008120033000000000000000000 ",
							"sourceMap": "68:720:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;583:203;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;213:176;;;:::i;:::-;;583:203;617:4;633:6;642:1;633:10;;671:1;667:5;;761:1;754:8;;;583:203;:::o;213:176::-;275:9;305:1;298:8;;261:56;341:9;371:1;364:8;;327:56;213:176::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "45000",
								"executionCost": "99",
								"totalCost": "45099"
							},
							"external": {
								"f()": "336",
								"minimalScoping()": "170"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 68,
									"end": 788,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 68,
									"end": 788,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 68,
									"end": 788,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 68,
									"end": 788,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 68,
									"end": 788,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 68,
									"end": 788,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 68,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 68,
									"end": 788,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 68,
									"end": 788,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 68,
									"end": 788,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 68,
									"end": 788,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 68,
									"end": 788,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 68,
									"end": 788,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 68,
									"end": 788,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 68,
									"end": 788,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 68,
									"end": 788,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 68,
									"end": 788,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 68,
									"end": 788,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 68,
									"end": 788,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 68,
									"end": 788,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 68,
									"end": 788,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209c6aa0ec4dcf3f6ade9d162da846904099383f4584e2f864c3f457c2790e746464736f6c63430008120033",
									".code": [
										{
											"begin": 68,
											"end": 788,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 68,
											"end": 788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68,
											"end": 788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68,
											"end": 788,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 68,
											"end": 788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68,
											"end": 788,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 68,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 68,
											"end": 788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68,
											"end": 788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68,
											"end": 788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68,
											"end": 788,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 68,
											"end": 788,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 68,
											"end": 788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68,
											"end": 788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68,
											"end": 788,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 68,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 68,
											"end": 788,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 68,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 68,
											"end": 788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68,
											"end": 788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68,
											"end": 788,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 68,
											"end": 788,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 68,
											"end": 788,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 68,
											"end": 788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68,
											"end": 788,
											"name": "PUSH",
											"source": 0,
											"value": "26121FF0"
										},
										{
											"begin": 68,
											"end": 788,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 68,
											"end": 788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68,
											"end": 788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68,
											"end": 788,
											"name": "PUSH",
											"source": 0,
											"value": "5288D07F"
										},
										{
											"begin": 68,
											"end": 788,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 68,
											"end": 788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68,
											"end": 788,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 68,
											"end": 788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68,
											"end": 788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68,
											"end": 788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68,
											"end": 788,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 583,
											"end": 786,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 583,
											"end": 786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 583,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 583,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 583,
											"end": 786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 583,
											"end": 786,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 583,
											"end": 786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 583,
											"end": 786,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 583,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 583,
											"end": 786,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 583,
											"end": 786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 583,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 583,
											"end": 786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 583,
											"end": 786,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 583,
											"end": 786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 583,
											"end": 786,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 583,
											"end": 786,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 583,
											"end": 786,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 583,
											"end": 786,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 583,
											"end": 786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 583,
											"end": 786,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 213,
											"end": 389,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 213,
											"end": 389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 213,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 213,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 213,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 213,
											"end": 389,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 213,
											"end": 389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 213,
											"end": 389,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 583,
											"end": 786,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 583,
											"end": 786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 617,
											"end": 621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 642,
											"end": 643,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 633,
											"end": 643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 671,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 667,
											"end": 672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 667,
											"end": 672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 761,
											"end": 762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 754,
											"end": 762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 754,
											"end": 762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 754,
											"end": 762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 583,
											"end": 786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 583,
											"end": 786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 213,
											"end": 389,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 213,
											"end": 389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 275,
											"end": 284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 305,
											"end": 306,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 298,
											"end": 306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 298,
											"end": 306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 261,
											"end": 317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 341,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 372,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 364,
											"end": 372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 327,
											"end": 383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 213,
											"end": 389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contract-variableScope.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"f()": "26121ff0",
							"minimalScoping()": "5288d07f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"f\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimalScoping\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-variableScope.sol\":\"C\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-variableScope.sol\":{\"keccak256\":\"0x553bec4b53dca1d9736390d989c01b3b4e4cffdd422423955164b72e5ed02489\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ab6ef857b654cda74df27b03a9482c259a40b3bbe29fdf0aec42ed35af7b858f\",\"dweb:/ipfs/QmWJodPkWRGFTAe1CkJY3aDiGzdkTUnCFesw8vp3AN3Uhs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> contract-variableScope.sol:29:13:\n   |\n29 |             uint x;\n   |             ^^^^^^\nNote: The shadowed declaration is here:\n  --> contract-variableScope.sol:26:9:\n   |\n26 |         uint x = 1;\n   |         ^^^^^^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 639,
						"file": "contract-variableScope.sol",
						"message": "The shadowed declaration is here:",
						"start": 633
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 734,
					"file": "contract-variableScope.sol",
					"start": 728
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> contract-variableScope.sol:29:13:\n   |\n29 |             uint x;\n   |             ^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 734,
					"file": "contract-variableScope.sol",
					"start": 728
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contract-variableScope.sol": {
				"ast": {
					"absolutePath": "contract-variableScope.sol",
					"exportedSymbols": {
						"C": [
							42
						]
					},
					"id": 43,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "C",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 42,
							"linearizedBaseContracts": [
								42
							],
							"name": "C",
							"nameLocation": "77:1:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "251:138:0",
										"statements": [
											{
												"id": 11,
												"nodeType": "Block",
												"src": "261:56:0",
												"statements": [
													{
														"assignments": [
															5
														],
														"declarations": [
															{
																"constant": false,
																"id": 5,
																"mutability": "mutable",
																"name": "same",
																"nameLocation": "280:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 11,
																"src": "275:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 4,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "275:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 6,
														"nodeType": "VariableDeclarationStatement",
														"src": "275:9:0"
													},
													{
														"expression": {
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 7,
																"name": "same",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "298:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 8,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "305:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "298:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 10,
														"nodeType": "ExpressionStatement",
														"src": "298:8:0"
													}
												]
											},
											{
												"id": 19,
												"nodeType": "Block",
												"src": "327:56:0",
												"statements": [
													{
														"assignments": [
															13
														],
														"declarations": [
															{
																"constant": false,
																"id": 13,
																"mutability": "mutable",
																"name": "same",
																"nameLocation": "346:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 19,
																"src": "341:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 12,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "341:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 14,
														"nodeType": "VariableDeclarationStatement",
														"src": "341:9:0"
													},
													{
														"expression": {
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 15,
																"name": "same",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "364:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"hexValue": "33",
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "371:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "364:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 18,
														"nodeType": "ExpressionStatement",
														"src": "364:8:0"
													}
												]
											}
										]
									},
									"functionSelector": "5288d07f",
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "minimalScoping",
									"nameLocation": "222:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "236:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:0:0"
									},
									"scope": 42,
									"src": "213:176:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "623:163:0",
										"statements": [
											{
												"assignments": [
													27
												],
												"declarations": [
													{
														"constant": false,
														"id": 27,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "638:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 40,
														"src": "633:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 26,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "633:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 29,
												"initialValue": {
													"hexValue": "31",
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "642:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "633:10:0"
											},
											{
												"id": 37,
												"nodeType": "Block",
												"src": "653:92:0",
												"statements": [
													{
														"expression": {
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 30,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "667:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"hexValue": "32",
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "671:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "667:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 33,
														"nodeType": "ExpressionStatement",
														"src": "667:5:0"
													},
													{
														"assignments": [
															35
														],
														"declarations": [
															{
																"constant": false,
																"id": 35,
																"mutability": "mutable",
																"name": "x",
																"nameLocation": "733:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 37,
																"src": "728:6:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 34,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "728:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 36,
														"nodeType": "VariableDeclarationStatement",
														"src": "728:6:0"
													}
												]
											},
											{
												"expression": {
													"id": 38,
													"name": "x",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "761:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 25,
												"id": 39,
												"nodeType": "Return",
												"src": "754:8:0"
											}
										]
									},
									"functionSelector": "26121ff0",
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "f",
									"nameLocation": "592:1:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "593:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "617:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "617:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "616:6:0"
									},
									"scope": 42,
									"src": "583:203:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 43,
							"src": "68:720:0",
							"usedErrors": []
						}
					],
					"src": "36:752:0"
				},
				"id": 0
			}
		}
	}
}