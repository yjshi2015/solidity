{
	"id": "9009cd41884d7688c567e506c71abbb7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract-libraries.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\n\nstruct bigint {\n    uint[] limbs;\n}\n\nlibrary BigInt {\n    function fromUint(uint x) internal pure returns (bigint memory r) {\n        r.limbs = new uint[](1);\n        r.limbs[0] = x;\n    }\n\n    function add(bigint memory a, bigint memory b) internal pure returns (bigint memory r) {\n        r.limbs = new uint[](max(a.limbs.length, b.limbs.length));\n        uint carry = 0;\n        for (uint i = 0; i < r.limbs.length; ++i) {\n            uint limbA = limb(a, i);\n            uint limbB = limb(b, i);\n            unchecked {\n                r.limbs[i] = limbA + limbB + carry;\n\n                if (limbA + limbB < limbA || (limbA + limbB == type(uint).max && carry > 0))\n                    carry = 1;\n                else\n                    carry = 0;\n            }\n        }\n        if (carry > 0) {\n            // too bad, we have to add a limb\n            uint[] memory newLimbs = new uint[](r.limbs.length + 1);\n            uint i;\n            for (i = 0; i < r.limbs.length; ++i)\n                newLimbs[i] = r.limbs[i];\n            newLimbs[i] = carry;\n            r.limbs = newLimbs;\n        }\n    }\n\n    function limb(bigint memory a, uint index) internal pure returns (uint) {\n        return index < a.limbs.length ? a.limbs[index] : 0;\n    }\n\n    function max(uint a, uint b) private pure returns (uint) {\n        return a > b ? a : b;\n    }\n}\n\ncontract C {\n    using BigInt for bigint;\n\n    function f() public pure {\n        bigint memory x = BigInt.fromUint(7);\n        bigint memory y = BigInt.fromUint(type(uint).max);\n        bigint memory z = x.add(y);\n        assert(z.limb(1) > 0);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contract-libraries.sol": {
				"BigInt": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract-libraries.sol\":98:1416  library BigInt {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract-libraries.sol\":98:1416  library BigInt {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e74bde1b1b223a799772f1dd564038841c8750eff2d1f0d313259ddb16fadf0264736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e74bde1b1b223a799772f1dd564038841c8750eff2d1f0d313259ddb16fadf0264736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0x4B 0xDE SHL SHL 0x22 GASPRICE PUSH26 0x9772F1DD564038841C8750EFF2D1F0D313259DDB16FADF026473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "98:1318:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e74bde1b1b223a799772f1dd564038841c8750eff2d1f0d313259ddb16fadf0264736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0x4B 0xDE SHL SHL 0x22 GASPRICE PUSH26 0x9772F1DD564038841C8750EFF2D1F0D313259DDB16FADF026473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "98:1318:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(struct bigint memory,struct bigint memory)": "infinite",
								"fromUint(uint256)": "infinite",
								"limb(struct bigint memory,uint256)": "infinite",
								"max(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 98,
									"end": 1416,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 98,
									"end": 1416,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e74bde1b1b223a799772f1dd564038841c8750eff2d1f0d313259ddb16fadf0264736f6c63430008120033",
									".code": [
										{
											"begin": 98,
											"end": 1416,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1416,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1416,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1416,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 98,
											"end": 1416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 98,
											"end": 1416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 1416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 1416,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contract-libraries.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-libraries.sol\":\"BigInt\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-libraries.sol\":{\"keccak256\":\"0x1b4a8e02c97c73ade3f93559a6f76df17b691999afe8c175746138d7c5274419\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://12b30494c2c2fd705518efe36cab76382fa8086589c8572b50c840eca2ef50fe\",\"dweb:/ipfs/QmbyHHf2tZJ9n7DkimkJ6q8jqaBRcKUufNqZgmJY6YTYyL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"C": {
					"abi": [
						{
							"inputs": [],
							"name": "f",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract-libraries.sol\":1418:1671  contract C {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract-libraries.sol\":1418:1671  contract C {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x26121ff0\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contract-libraries.sol\":1465:1669  function f() public pure {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"contract-libraries.sol\":1500:1515  bigint memory x */\n      0x00\n        /* \"contract-libraries.sol\":1518:1536  BigInt.fromUint(7) */\n      tag_7\n        /* \"contract-libraries.sol\":1534:1535  7 */\n      0x07\n        /* \"contract-libraries.sol\":1518:1533  BigInt.fromUint */\n      tag_8\n        /* \"contract-libraries.sol\":1518:1536  BigInt.fromUint(7) */\n      jump\t// in\n    tag_7:\n        /* \"contract-libraries.sol\":1500:1536  bigint memory x = BigInt.fromUint(7) */\n      swap1\n      pop\n        /* \"contract-libraries.sol\":1546:1561  bigint memory y */\n      0x00\n        /* \"contract-libraries.sol\":1564:1595  BigInt.fromUint(type(uint).max) */\n      tag_9\n        /* \"contract-libraries.sol\":1580:1594  type(uint).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contract-libraries.sol\":1564:1579  BigInt.fromUint */\n      tag_8\n        /* \"contract-libraries.sol\":1564:1595  BigInt.fromUint(type(uint).max) */\n      jump\t// in\n    tag_9:\n        /* \"contract-libraries.sol\":1546:1595  bigint memory y = BigInt.fromUint(type(uint).max) */\n      swap1\n      pop\n        /* \"contract-libraries.sol\":1605:1620  bigint memory z */\n      0x00\n        /* \"contract-libraries.sol\":1623:1631  x.add(y) */\n      tag_10\n        /* \"contract-libraries.sol\":1629:1630  y */\n      dup3\n        /* \"contract-libraries.sol\":1623:1624  x */\n      dup5\n        /* \"contract-libraries.sol\":1623:1628  x.add */\n      tag_11\n      swap1\n        /* \"contract-libraries.sol\":1623:1631  x.add(y) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_10:\n        /* \"contract-libraries.sol\":1605:1631  bigint memory z = x.add(y) */\n      swap1\n      pop\n        /* \"contract-libraries.sol\":1660:1661  0 */\n      0x00\n        /* \"contract-libraries.sol\":1648:1657  z.limb(1) */\n      tag_12\n        /* \"contract-libraries.sol\":1655:1656  1 */\n      0x01\n        /* \"contract-libraries.sol\":1648:1649  z */\n      dup4\n        /* \"contract-libraries.sol\":1648:1654  z.limb */\n      tag_13\n      swap1\n        /* \"contract-libraries.sol\":1648:1657  z.limb(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_12:\n        /* \"contract-libraries.sol\":1648:1661  z.limb(1) > 0 */\n      gt\n        /* \"contract-libraries.sol\":1641:1662  assert(z.limb(1) > 0) */\n      tag_14\n      jumpi\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n    tag_14:\n        /* \"contract-libraries.sol\":1490:1669  {... */\n      pop\n      pop\n      pop\n        /* \"contract-libraries.sol\":1465:1669  function f() public pure {... */\n      jump\t// out\n        /* \"contract-libraries.sol\":119:249  function fromUint(uint x) internal pure returns (bigint memory r) {... */\n    tag_8:\n        /* \"contract-libraries.sol\":168:183  bigint memory r */\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"contract-libraries.sol\":216:217  1 */\n      0x01\n        /* \"contract-libraries.sol\":205:218  new uint[](1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_20\n      jumpi\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n    tag_20:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_23\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_23:\n      pop\n        /* \"contract-libraries.sol\":195:196  r */\n      dup2\n        /* \"contract-libraries.sol\":195:202  r.limbs */\n      0x00\n      add\n        /* \"contract-libraries.sol\":195:218  r.limbs = new uint[](1) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contract-libraries.sol\":241:242  x */\n      dup2\n        /* \"contract-libraries.sol\":228:229  r */\n      dup2\n        /* \"contract-libraries.sol\":228:235  r.limbs */\n      0x00\n      add\n      mload\n        /* \"contract-libraries.sol\":236:237  0 */\n      0x00\n        /* \"contract-libraries.sol\":228:238  r.limbs[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_24\n      jumpi\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n    tag_24:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contract-libraries.sol\":228:242  r.limbs[0] = x */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contract-libraries.sol\":119:249  function fromUint(uint x) internal pure returns (bigint memory r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract-libraries.sol\":255:1169  function add(bigint memory a, bigint memory b) internal pure returns (bigint memory r) {... */\n    tag_11:\n        /* \"contract-libraries.sol\":325:340  bigint memory r */\n      tag_27\n      tag_18\n      jump\t// in\n    tag_27:\n        /* \"contract-libraries.sol\":373:408  max(a.limbs.length, b.limbs.length) */\n      tag_29\n        /* \"contract-libraries.sol\":377:378  a */\n      dup4\n        /* \"contract-libraries.sol\":377:384  a.limbs */\n      0x00\n      add\n      mload\n        /* \"contract-libraries.sol\":377:391  a.limbs.length */\n      mload\n        /* \"contract-libraries.sol\":393:394  b */\n      dup4\n        /* \"contract-libraries.sol\":393:400  b.limbs */\n      0x00\n      add\n      mload\n        /* \"contract-libraries.sol\":393:407  b.limbs.length */\n      mload\n        /* \"contract-libraries.sol\":373:376  max */\n      tag_30\n        /* \"contract-libraries.sol\":373:408  max(a.limbs.length, b.limbs.length) */\n      jump\t// in\n    tag_29:\n        /* \"contract-libraries.sol\":362:409  new uint[](max(a.limbs.length, b.limbs.length)) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_31\n      jumpi\n      tag_32\n      tag_22\n      jump\t// in\n    tag_32:\n    tag_31:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_33\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_33:\n      pop\n        /* \"contract-libraries.sol\":352:353  r */\n      dup2\n        /* \"contract-libraries.sol\":352:359  r.limbs */\n      0x00\n      add\n        /* \"contract-libraries.sol\":352:409  r.limbs = new uint[](max(a.limbs.length, b.limbs.length)) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contract-libraries.sol\":419:429  uint carry */\n      0x00\n        /* \"contract-libraries.sol\":448:454  uint i */\n      dup1\n        /* \"contract-libraries.sol\":443:837  for (uint i = 0; i < r.limbs.length; ++i) {... */\n    tag_34:\n        /* \"contract-libraries.sol\":464:465  r */\n      dup3\n        /* \"contract-libraries.sol\":464:471  r.limbs */\n      0x00\n      add\n      mload\n        /* \"contract-libraries.sol\":464:478  r.limbs.length */\n      mload\n        /* \"contract-libraries.sol\":460:461  i */\n      dup2\n        /* \"contract-libraries.sol\":460:478  i < r.limbs.length */\n      lt\n        /* \"contract-libraries.sol\":443:837  for (uint i = 0; i < r.limbs.length; ++i) {... */\n      iszero\n      tag_35\n      jumpi\n        /* \"contract-libraries.sol\":499:509  uint limbA */\n      0x00\n        /* \"contract-libraries.sol\":512:522  limb(a, i) */\n      tag_37\n        /* \"contract-libraries.sol\":517:518  a */\n      dup7\n        /* \"contract-libraries.sol\":520:521  i */\n      dup4\n        /* \"contract-libraries.sol\":512:516  limb */\n      tag_13\n        /* \"contract-libraries.sol\":512:522  limb(a, i) */\n      jump\t// in\n    tag_37:\n        /* \"contract-libraries.sol\":499:522  uint limbA = limb(a, i) */\n      swap1\n      pop\n        /* \"contract-libraries.sol\":536:546  uint limbB */\n      0x00\n        /* \"contract-libraries.sol\":549:559  limb(b, i) */\n      tag_38\n        /* \"contract-libraries.sol\":554:555  b */\n      dup7\n        /* \"contract-libraries.sol\":557:558  i */\n      dup5\n        /* \"contract-libraries.sol\":549:553  limb */\n      tag_13\n        /* \"contract-libraries.sol\":549:559  limb(b, i) */\n      jump\t// in\n    tag_38:\n        /* \"contract-libraries.sol\":536:559  uint limbB = limb(b, i) */\n      swap1\n      pop\n        /* \"contract-libraries.sol\":630:635  carry */\n      dup4\n        /* \"contract-libraries.sol\":622:627  limbB */\n      dup2\n        /* \"contract-libraries.sol\":614:619  limbA */\n      dup4\n        /* \"contract-libraries.sol\":614:627  limbA + limbB */\n      add\n        /* \"contract-libraries.sol\":614:635  limbA + limbB + carry */\n      add\n        /* \"contract-libraries.sol\":601:602  r */\n      dup6\n        /* \"contract-libraries.sol\":601:608  r.limbs */\n      0x00\n      add\n      mload\n        /* \"contract-libraries.sol\":609:610  i */\n      dup5\n        /* \"contract-libraries.sol\":601:611  r.limbs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_39\n      jumpi\n      tag_40\n      tag_26\n      jump\t// in\n    tag_40:\n    tag_39:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contract-libraries.sol\":601:635  r.limbs[i] = limbA + limbB + carry */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contract-libraries.sol\":674:679  limbA */\n      dup2\n        /* \"contract-libraries.sol\":666:671  limbB */\n      dup2\n        /* \"contract-libraries.sol\":658:663  limbA */\n      dup4\n        /* \"contract-libraries.sol\":658:671  limbA + limbB */\n      add\n        /* \"contract-libraries.sol\":658:679  limbA + limbB < limbA */\n      lt\n        /* \"contract-libraries.sol\":658:729  limbA + limbB < limbA || (limbA + limbB == type(uint).max && carry > 0) */\n      dup1\n      tag_41\n      jumpi\n      pop\n        /* \"contract-libraries.sol\":701:715  type(uint).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contract-libraries.sol\":692:697  limbB */\n      dup2\n        /* \"contract-libraries.sol\":684:689  limbA */\n      dup4\n        /* \"contract-libraries.sol\":684:697  limbA + limbB */\n      add\n        /* \"contract-libraries.sol\":684:715  limbA + limbB == type(uint).max */\n      eq\n        /* \"contract-libraries.sol\":684:728  limbA + limbB == type(uint).max && carry > 0 */\n      dup1\n      iszero\n      tag_42\n      jumpi\n      pop\n        /* \"contract-libraries.sol\":727:728  0 */\n      0x00\n        /* \"contract-libraries.sol\":719:724  carry */\n      dup5\n        /* \"contract-libraries.sol\":719:728  carry > 0 */\n      gt\n        /* \"contract-libraries.sol\":684:728  limbA + limbB == type(uint).max && carry > 0 */\n    tag_42:\n        /* \"contract-libraries.sol\":658:729  limbA + limbB < limbA || (limbA + limbB == type(uint).max && carry > 0) */\n    tag_41:\n        /* \"contract-libraries.sol\":654:812  if (limbA + limbB < limbA || (limbA + limbB == type(uint).max && carry > 0))... */\n      iszero\n      tag_43\n      jumpi\n        /* \"contract-libraries.sol\":759:760  1 */\n      0x01\n        /* \"contract-libraries.sol\":751:760  carry = 1 */\n      swap4\n      pop\n        /* \"contract-libraries.sol\":654:812  if (limbA + limbB < limbA || (limbA + limbB == type(uint).max && carry > 0))... */\n      jump(tag_44)\n    tag_43:\n        /* \"contract-libraries.sol\":811:812  0 */\n      0x00\n        /* \"contract-libraries.sol\":803:812  carry = 0 */\n      swap4\n      pop\n        /* \"contract-libraries.sol\":654:812  if (limbA + limbB < limbA || (limbA + limbB == type(uint).max && carry > 0))... */\n    tag_44:\n        /* \"contract-libraries.sol\":485:837  {... */\n      pop\n      pop\n        /* \"contract-libraries.sol\":480:483  ++i */\n      dup1\n      tag_45\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      swap1\n      pop\n        /* \"contract-libraries.sol\":443:837  for (uint i = 0; i < r.limbs.length; ++i) {... */\n      jump(tag_34)\n    tag_35:\n      pop\n        /* \"contract-libraries.sol\":858:859  0 */\n      0x00\n        /* \"contract-libraries.sol\":850:855  carry */\n      dup2\n        /* \"contract-libraries.sol\":850:859  carry > 0 */\n      gt\n        /* \"contract-libraries.sol\":846:1163  if (carry > 0) {... */\n      iszero\n      tag_47\n      jumpi\n        /* \"contract-libraries.sol\":921:943  uint[] memory newLimbs */\n      0x00\n        /* \"contract-libraries.sol\":974:975  1 */\n      0x01\n        /* \"contract-libraries.sol\":957:958  r */\n      dup4\n        /* \"contract-libraries.sol\":957:964  r.limbs */\n      0x00\n      add\n      mload\n        /* \"contract-libraries.sol\":957:971  r.limbs.length */\n      mload\n        /* \"contract-libraries.sol\":957:975  r.limbs.length + 1 */\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"contract-libraries.sol\":946:976  new uint[](r.limbs.length + 1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_50\n      jumpi\n      tag_51\n      tag_22\n      jump\t// in\n    tag_51:\n    tag_50:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_52\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_52:\n      pop\n        /* \"contract-libraries.sol\":921:976  uint[] memory newLimbs = new uint[](r.limbs.length + 1) */\n      swap1\n      pop\n        /* \"contract-libraries.sol\":990:996  uint i */\n      0x00\n        /* \"contract-libraries.sol\":1010:1087  for (i = 0; i < r.limbs.length; ++i)... */\n    tag_53:\n        /* \"contract-libraries.sol\":1026:1027  r */\n      dup4\n        /* \"contract-libraries.sol\":1026:1033  r.limbs */\n      0x00\n      add\n      mload\n        /* \"contract-libraries.sol\":1026:1040  r.limbs.length */\n      mload\n        /* \"contract-libraries.sol\":1022:1023  i */\n      dup2\n        /* \"contract-libraries.sol\":1022:1040  i < r.limbs.length */\n      lt\n        /* \"contract-libraries.sol\":1010:1087  for (i = 0; i < r.limbs.length; ++i)... */\n      iszero\n      tag_54\n      jumpi\n        /* \"contract-libraries.sol\":1077:1078  r */\n      dup4\n        /* \"contract-libraries.sol\":1077:1084  r.limbs */\n      0x00\n      add\n      mload\n        /* \"contract-libraries.sol\":1085:1086  i */\n      dup2\n        /* \"contract-libraries.sol\":1077:1087  r.limbs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_56\n      jumpi\n      tag_57\n      tag_26\n      jump\t// in\n    tag_57:\n    tag_56:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contract-libraries.sol\":1063:1071  newLimbs */\n      dup3\n        /* \"contract-libraries.sol\":1072:1073  i */\n      dup3\n        /* \"contract-libraries.sol\":1063:1074  newLimbs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_58\n      jumpi\n      tag_59\n      tag_26\n      jump\t// in\n    tag_59:\n    tag_58:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contract-libraries.sol\":1063:1087  newLimbs[i] = r.limbs[i] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contract-libraries.sol\":1042:1045  ++i */\n      dup1\n      tag_60\n      swap1\n      tag_46\n      jump\t// in\n    tag_60:\n      swap1\n      pop\n        /* \"contract-libraries.sol\":1010:1087  for (i = 0; i < r.limbs.length; ++i)... */\n      jump(tag_53)\n    tag_54:\n        /* \"contract-libraries.sol\":1115:1120  carry */\n      dup3\n        /* \"contract-libraries.sol\":1101:1109  newLimbs */\n      dup3\n        /* \"contract-libraries.sol\":1110:1111  i */\n      dup3\n        /* \"contract-libraries.sol\":1101:1112  newLimbs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_61\n      jumpi\n      tag_62\n      tag_26\n      jump\t// in\n    tag_62:\n    tag_61:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contract-libraries.sol\":1101:1120  newLimbs[i] = carry */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contract-libraries.sol\":1144:1152  newLimbs */\n      dup2\n        /* \"contract-libraries.sol\":1134:1135  r */\n      dup5\n        /* \"contract-libraries.sol\":1134:1141  r.limbs */\n      0x00\n      add\n        /* \"contract-libraries.sol\":1134:1152  r.limbs = newLimbs */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contract-libraries.sol\":861:1163  {... */\n      pop\n      pop\n        /* \"contract-libraries.sol\":846:1163  if (carry > 0) {... */\n    tag_47:\n        /* \"contract-libraries.sol\":342:1169  {... */\n      pop\n        /* \"contract-libraries.sol\":255:1169  function add(bigint memory a, bigint memory b) internal pure returns (bigint memory r) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract-libraries.sol\":1175:1314  function limb(bigint memory a, uint index) internal pure returns (uint) {... */\n    tag_13:\n        /* \"contract-libraries.sol\":1241:1245  uint */\n      0x00\n        /* \"contract-libraries.sol\":1272:1273  a */\n      dup3\n        /* \"contract-libraries.sol\":1272:1279  a.limbs */\n      0x00\n      add\n      mload\n        /* \"contract-libraries.sol\":1272:1286  a.limbs.length */\n      mload\n        /* \"contract-libraries.sol\":1264:1269  index */\n      dup3\n        /* \"contract-libraries.sol\":1264:1286  index < a.limbs.length */\n      lt\n        /* \"contract-libraries.sol\":1264:1307  index < a.limbs.length ? a.limbs[index] : 0 */\n      tag_64\n      jumpi\n        /* \"contract-libraries.sol\":1306:1307  0 */\n      0x00\n        /* \"contract-libraries.sol\":1264:1307  index < a.limbs.length ? a.limbs[index] : 0 */\n      jump(tag_65)\n    tag_64:\n        /* \"contract-libraries.sol\":1289:1290  a */\n      dup3\n        /* \"contract-libraries.sol\":1289:1296  a.limbs */\n      0x00\n      add\n      mload\n        /* \"contract-libraries.sol\":1297:1302  index */\n      dup3\n        /* \"contract-libraries.sol\":1289:1303  a.limbs[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_66\n      jumpi\n      tag_67\n      tag_26\n      jump\t// in\n    tag_67:\n    tag_66:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contract-libraries.sol\":1264:1307  index < a.limbs.length ? a.limbs[index] : 0 */\n    tag_65:\n        /* \"contract-libraries.sol\":1257:1307  return index < a.limbs.length ? a.limbs[index] : 0 */\n      swap1\n      pop\n        /* \"contract-libraries.sol\":1175:1314  function limb(bigint memory a, uint index) internal pure returns (uint) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract-libraries.sol\":1320:1414  function max(uint a, uint b) private pure returns (uint) {... */\n    tag_30:\n        /* \"contract-libraries.sol\":1371:1375  uint */\n      0x00\n        /* \"contract-libraries.sol\":1398:1399  b */\n      dup2\n        /* \"contract-libraries.sol\":1394:1395  a */\n      dup4\n        /* \"contract-libraries.sol\":1394:1399  a > b */\n      gt\n        /* \"contract-libraries.sol\":1394:1407  a > b ? a : b */\n      tag_69\n      jumpi\n        /* \"contract-libraries.sol\":1406:1407  b */\n      dup2\n        /* \"contract-libraries.sol\":1394:1407  a > b ? a : b */\n      jump(tag_70)\n    tag_69:\n        /* \"contract-libraries.sol\":1402:1403  a */\n      dup3\n        /* \"contract-libraries.sol\":1394:1407  a > b ? a : b */\n    tag_70:\n        /* \"contract-libraries.sol\":1387:1407  return a > b ? a : b */\n      swap1\n      pop\n        /* \"contract-libraries.sol\":1320:1414  function max(uint a, uint b) private pure returns (uint) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_18:\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x60\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:187   */\n    tag_16:\n        /* \"#utility.yul\":55:132   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":52:53   */\n      0x00\n        /* \"#utility.yul\":45:133   */\n      mstore\n        /* \"#utility.yul\":152:156   */\n      0x01\n        /* \"#utility.yul\":149:150   */\n      0x04\n        /* \"#utility.yul\":142:157   */\n      mstore\n        /* \"#utility.yul\":176:180   */\n      0x24\n        /* \"#utility.yul\":173:174   */\n      0x00\n        /* \"#utility.yul\":166:181   */\n      revert\n        /* \"#utility.yul\":193:373   */\n    tag_22:\n        /* \"#utility.yul\":241:318   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":238:239   */\n      0x00\n        /* \"#utility.yul\":231:319   */\n      mstore\n        /* \"#utility.yul\":338:342   */\n      0x41\n        /* \"#utility.yul\":335:336   */\n      0x04\n        /* \"#utility.yul\":328:343   */\n      mstore\n        /* \"#utility.yul\":362:366   */\n      0x24\n        /* \"#utility.yul\":359:360   */\n      0x00\n        /* \"#utility.yul\":352:367   */\n      revert\n        /* \"#utility.yul\":379:559   */\n    tag_26:\n        /* \"#utility.yul\":427:504   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":424:425   */\n      0x00\n        /* \"#utility.yul\":417:505   */\n      mstore\n        /* \"#utility.yul\":524:528   */\n      0x32\n        /* \"#utility.yul\":521:522   */\n      0x04\n        /* \"#utility.yul\":514:529   */\n      mstore\n        /* \"#utility.yul\":548:552   */\n      0x24\n        /* \"#utility.yul\":545:546   */\n      0x00\n        /* \"#utility.yul\":538:553   */\n      revert\n        /* \"#utility.yul\":565:745   */\n    tag_71:\n        /* \"#utility.yul\":613:690   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":610:611   */\n      0x00\n        /* \"#utility.yul\":603:691   */\n      mstore\n        /* \"#utility.yul\":710:714   */\n      0x11\n        /* \"#utility.yul\":707:708   */\n      0x04\n        /* \"#utility.yul\":700:715   */\n      mstore\n        /* \"#utility.yul\":734:738   */\n      0x24\n        /* \"#utility.yul\":731:732   */\n      0x00\n        /* \"#utility.yul\":724:739   */\n      revert\n        /* \"#utility.yul\":751:828   */\n    tag_72:\n        /* \"#utility.yul\":788:795   */\n      0x00\n        /* \"#utility.yul\":817:822   */\n      dup2\n        /* \"#utility.yul\":806:822   */\n      swap1\n      pop\n        /* \"#utility.yul\":751:828   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":834:1067   */\n    tag_46:\n        /* \"#utility.yul\":873:876   */\n      0x00\n        /* \"#utility.yul\":896:920   */\n      tag_80\n        /* \"#utility.yul\":914:919   */\n      dup3\n        /* \"#utility.yul\":896:920   */\n      tag_72\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":887:920   */\n      swap2\n      pop\n        /* \"#utility.yul\":942:1008   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":935:940   */\n      dup3\n        /* \"#utility.yul\":932:1009   */\n      sub\n        /* \"#utility.yul\":929:1032   */\n      tag_81\n      jumpi\n        /* \"#utility.yul\":1012:1030   */\n      tag_82\n      tag_71\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":929:1032   */\n    tag_81:\n        /* \"#utility.yul\":1059:1060   */\n      0x01\n        /* \"#utility.yul\":1052:1057   */\n      dup3\n        /* \"#utility.yul\":1048:1061   */\n      add\n        /* \"#utility.yul\":1041:1061   */\n      swap1\n      pop\n        /* \"#utility.yul\":834:1067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1073:1264   */\n    tag_49:\n        /* \"#utility.yul\":1113:1116   */\n      0x00\n        /* \"#utility.yul\":1132:1152   */\n      tag_84\n        /* \"#utility.yul\":1150:1151   */\n      dup3\n        /* \"#utility.yul\":1132:1152   */\n      tag_72\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":1127:1152   */\n      swap2\n      pop\n        /* \"#utility.yul\":1166:1186   */\n      tag_85\n        /* \"#utility.yul\":1184:1185   */\n      dup4\n        /* \"#utility.yul\":1166:1186   */\n      tag_72\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1161:1186   */\n      swap3\n      pop\n        /* \"#utility.yul\":1209:1210   */\n      dup3\n        /* \"#utility.yul\":1206:1207   */\n      dup3\n        /* \"#utility.yul\":1202:1211   */\n      add\n        /* \"#utility.yul\":1195:1211   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1233   */\n      dup1\n        /* \"#utility.yul\":1227:1228   */\n      dup3\n        /* \"#utility.yul\":1224:1234   */\n      gt\n        /* \"#utility.yul\":1221:1257   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":1237:1255   */\n      tag_87\n      tag_71\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1221:1257   */\n    tag_86:\n        /* \"#utility.yul\":1073:1264   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b3510c393f9761a71340b85af2075c2e6b5acc586275a3dd01ab0f9700d4314c64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610538806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806326121ff014610030575b600080fd5b61003861003a565b005b600061004660076100b5565b905060006100737fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6100b5565b9050600061008a828461013990919063ffffffff16565b905060006100a260018361035790919063ffffffff16565b116100b0576100af6103c0565b5b505050565b6100bd6103ad565b600167ffffffffffffffff8111156100d8576100d76103ef565b5b6040519080825280602002602001820160405280156101065781602001602082028036833780820191505090505b5081600001819052508181600001516000815181106101285761012761041e565b5b602002602001018181525050919050565b6101416103ad565b610155836000015151836000015151610394565b67ffffffffffffffff81111561016e5761016d6103ef565b5b60405190808252806020026020018201604052801561019c5781602001602082028036833780820191505090505b5081600001819052506000805b82600001515181101561025d5760006101c28683610357565b905060006101d08684610357565b90508381830101856000015184815181106101ee576101ed61041e565b5b60200260200101818152505081818301108061023757507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8183011480156102365750600084115b5b15610245576001935061024a565b600093505b50508061025690610486565b90506101a9565b506000811115610350576000600183600001515161027b91906104ce565b67ffffffffffffffff811115610294576102936103ef565b5b6040519080825280602002602001820160405280156102c25781602001602082028036833780820191505090505b50905060005b83600001515181101561032457836000015181815181106102ec576102eb61041e565b5b60200260200101518282815181106103075761030661041e565b5b6020026020010181815250508061031d90610486565b90506102c8565b828282815181106103385761033761041e565b5b60200260200101818152505081846000018190525050505b5092915050565b6000826000015151821061036c57600061038c565b826000015182815181106103835761038261041e565b5b60200260200101515b905092915050565b60008183116103a357816103a5565b825b905092915050565b6040518060200160405280606081525090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b60006104918261047c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036104c3576104c261044d565b5b600182019050919050565b60006104d98261047c565b91506104e48361047c565b92508282019050808211156104fc576104fb61044d565b5b9291505056fea2646970667358221220b3510c393f9761a71340b85af2075c2e6b5acc586275a3dd01ab0f9700d4314c64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x538 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26121FF0 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x46 PUSH1 0x7 PUSH2 0xB5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x73 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xB5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8A DUP3 DUP5 PUSH2 0x139 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA2 PUSH1 0x1 DUP4 PUSH2 0x357 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT PUSH2 0xB0 JUMPI PUSH2 0xAF PUSH2 0x3C0 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xBD PUSH2 0x3AD JUMP JUMPDEST PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD8 JUMPI PUSH2 0xD7 PUSH2 0x3EF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x106 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP DUP2 PUSH1 0x0 ADD DUP2 SWAP1 MSTORE POP DUP2 DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x128 JUMPI PUSH2 0x127 PUSH2 0x41E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x141 PUSH2 0x3AD JUMP JUMPDEST PUSH2 0x155 DUP4 PUSH1 0x0 ADD MLOAD MLOAD DUP4 PUSH1 0x0 ADD MLOAD MLOAD PUSH2 0x394 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16E JUMPI PUSH2 0x16D PUSH2 0x3EF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP DUP2 PUSH1 0x0 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 DUP1 JUMPDEST DUP3 PUSH1 0x0 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 PUSH2 0x1C2 DUP7 DUP4 PUSH2 0x357 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D0 DUP7 DUP5 PUSH2 0x357 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 DUP4 ADD ADD DUP6 PUSH1 0x0 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1EE JUMPI PUSH2 0x1ED PUSH2 0x41E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP2 DUP4 ADD LT DUP1 PUSH2 0x237 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP4 ADD EQ DUP1 ISZERO PUSH2 0x236 JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST JUMPDEST ISZERO PUSH2 0x245 JUMPI PUSH1 0x1 SWAP4 POP PUSH2 0x24A JUMP JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST POP POP DUP1 PUSH2 0x256 SWAP1 PUSH2 0x486 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A9 JUMP JUMPDEST POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 PUSH1 0x1 DUP4 PUSH1 0x0 ADD MLOAD MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x4CE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x294 JUMPI PUSH2 0x293 PUSH2 0x3EF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2C2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 PUSH1 0x0 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x324 JUMPI DUP4 PUSH1 0x0 ADD MLOAD DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2EC JUMPI PUSH2 0x2EB PUSH2 0x41E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x307 JUMPI PUSH2 0x306 PUSH2 0x41E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x31D SWAP1 PUSH2 0x486 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C8 JUMP JUMPDEST DUP3 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x338 JUMPI PUSH2 0x337 PUSH2 0x41E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP5 PUSH1 0x0 ADD DUP2 SWAP1 MSTORE POP POP POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD MLOAD DUP3 LT PUSH2 0x36C JUMPI PUSH1 0x0 PUSH2 0x38C JUMP JUMPDEST DUP3 PUSH1 0x0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x383 JUMPI PUSH2 0x382 PUSH2 0x41E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT PUSH2 0x3A3 JUMPI DUP2 PUSH2 0x3A5 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x491 DUP3 PUSH2 0x47C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4C3 JUMPI PUSH2 0x4C2 PUSH2 0x44D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D9 DUP3 PUSH2 0x47C JUMP JUMPDEST SWAP2 POP PUSH2 0x4E4 DUP4 PUSH2 0x47C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4FC JUMPI PUSH2 0x4FB PUSH2 0x44D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 MLOAD 0xC CODECOPY EXTCODEHASH SWAP8 PUSH2 0xA713 BLOCKHASH 0xB8 GAS CALLCODE SMOD 0x5C 0x2E PUSH12 0x5ACC586275A3DD01AB0F9700 0xD4 BALANCE 0x4C PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "1418:253:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@add_193": {
									"entryPoint": 313,
									"id": 193,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@f_279": {
									"entryPoint": 58,
									"id": 279,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@fromUint_32": {
									"entryPoint": 181,
									"id": 32,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@limb_216": {
									"entryPoint": 855,
									"id": 216,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@max_233": {
									"entryPoint": 916,
									"id": 233,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 960,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 1101,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1054,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1007,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1267:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "52:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "55:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "45:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "45:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "149:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "152:4:1",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "142:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "142:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "173:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "176:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:15:1"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "221:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "238:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "241:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "231:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "231:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "335:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "338:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "328:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "328:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "328:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "359:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "362:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "352:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "352:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "352:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "193:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "407:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "424:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "427:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "417:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "417:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "521:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "524:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "514:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "514:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "514:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "545:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "548:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "538:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "538:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "538:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "379:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "593:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "610:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "613:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "603:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "603:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "707:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "710:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "700:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "700:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "700:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "731:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "734:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "724:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "724:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "724:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "565:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "796:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "806:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "817:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "806:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "778:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "788:7:1",
														"type": ""
													}
												],
												"src": "751:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "877:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "887:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "914:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "896:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "887:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1010:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1012:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1012:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1012:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "935:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "942:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "932:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "932:77:1"
															},
															"nodeType": "YulIf",
															"src": "929:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1041:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1052:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1059:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1048:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1048:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1041:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "863:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "873:3:1",
														"type": ""
													}
												],
												"src": "834:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1127:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1150:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1132:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1127:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1161:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1184:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1166:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1161:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1195:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1206:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1209:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1202:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1202:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1195:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1235:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1237:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1237:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1237:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1227:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "1230:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1224:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1224:10:1"
															},
															"nodeType": "YulIf",
															"src": "1221:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1104:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1107:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1113:3:1",
														"type": ""
													}
												],
												"src": "1073:191:1"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806326121ff014610030575b600080fd5b61003861003a565b005b600061004660076100b5565b905060006100737fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6100b5565b9050600061008a828461013990919063ffffffff16565b905060006100a260018361035790919063ffffffff16565b116100b0576100af6103c0565b5b505050565b6100bd6103ad565b600167ffffffffffffffff8111156100d8576100d76103ef565b5b6040519080825280602002602001820160405280156101065781602001602082028036833780820191505090505b5081600001819052508181600001516000815181106101285761012761041e565b5b602002602001018181525050919050565b6101416103ad565b610155836000015151836000015151610394565b67ffffffffffffffff81111561016e5761016d6103ef565b5b60405190808252806020026020018201604052801561019c5781602001602082028036833780820191505090505b5081600001819052506000805b82600001515181101561025d5760006101c28683610357565b905060006101d08684610357565b90508381830101856000015184815181106101ee576101ed61041e565b5b60200260200101818152505081818301108061023757507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8183011480156102365750600084115b5b15610245576001935061024a565b600093505b50508061025690610486565b90506101a9565b506000811115610350576000600183600001515161027b91906104ce565b67ffffffffffffffff811115610294576102936103ef565b5b6040519080825280602002602001820160405280156102c25781602001602082028036833780820191505090505b50905060005b83600001515181101561032457836000015181815181106102ec576102eb61041e565b5b60200260200101518282815181106103075761030661041e565b5b6020026020010181815250508061031d90610486565b90506102c8565b828282815181106103385761033761041e565b5b60200260200101818152505081846000018190525050505b5092915050565b6000826000015151821061036c57600061038c565b826000015182815181106103835761038261041e565b5b60200260200101515b905092915050565b60008183116103a357816103a5565b825b905092915050565b6040518060200160405280606081525090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b60006104918261047c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036104c3576104c261044d565b5b600182019050919050565b60006104d98261047c565b91506104e48361047c565b92508282019050808211156104fc576104fb61044d565b5b9291505056fea2646970667358221220b3510c393f9761a71340b85af2075c2e6b5acc586275a3dd01ab0f9700d4314c64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26121FF0 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x46 PUSH1 0x7 PUSH2 0xB5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x73 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xB5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8A DUP3 DUP5 PUSH2 0x139 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA2 PUSH1 0x1 DUP4 PUSH2 0x357 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT PUSH2 0xB0 JUMPI PUSH2 0xAF PUSH2 0x3C0 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xBD PUSH2 0x3AD JUMP JUMPDEST PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD8 JUMPI PUSH2 0xD7 PUSH2 0x3EF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x106 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP DUP2 PUSH1 0x0 ADD DUP2 SWAP1 MSTORE POP DUP2 DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x128 JUMPI PUSH2 0x127 PUSH2 0x41E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x141 PUSH2 0x3AD JUMP JUMPDEST PUSH2 0x155 DUP4 PUSH1 0x0 ADD MLOAD MLOAD DUP4 PUSH1 0x0 ADD MLOAD MLOAD PUSH2 0x394 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16E JUMPI PUSH2 0x16D PUSH2 0x3EF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP DUP2 PUSH1 0x0 ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 DUP1 JUMPDEST DUP3 PUSH1 0x0 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 PUSH2 0x1C2 DUP7 DUP4 PUSH2 0x357 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D0 DUP7 DUP5 PUSH2 0x357 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 DUP4 ADD ADD DUP6 PUSH1 0x0 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1EE JUMPI PUSH2 0x1ED PUSH2 0x41E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP2 DUP4 ADD LT DUP1 PUSH2 0x237 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP4 ADD EQ DUP1 ISZERO PUSH2 0x236 JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST JUMPDEST ISZERO PUSH2 0x245 JUMPI PUSH1 0x1 SWAP4 POP PUSH2 0x24A JUMP JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST POP POP DUP1 PUSH2 0x256 SWAP1 PUSH2 0x486 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A9 JUMP JUMPDEST POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 PUSH1 0x1 DUP4 PUSH1 0x0 ADD MLOAD MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x4CE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x294 JUMPI PUSH2 0x293 PUSH2 0x3EF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2C2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 PUSH1 0x0 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x324 JUMPI DUP4 PUSH1 0x0 ADD MLOAD DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2EC JUMPI PUSH2 0x2EB PUSH2 0x41E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x307 JUMPI PUSH2 0x306 PUSH2 0x41E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x31D SWAP1 PUSH2 0x486 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C8 JUMP JUMPDEST DUP3 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x338 JUMPI PUSH2 0x337 PUSH2 0x41E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP5 PUSH1 0x0 ADD DUP2 SWAP1 MSTORE POP POP POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD MLOAD DUP3 LT PUSH2 0x36C JUMPI PUSH1 0x0 PUSH2 0x38C JUMP JUMPDEST DUP3 PUSH1 0x0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x383 JUMPI PUSH2 0x382 PUSH2 0x41E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT PUSH2 0x3A3 JUMPI DUP2 PUSH2 0x3A5 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x491 DUP3 PUSH2 0x47C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4C3 JUMPI PUSH2 0x4C2 PUSH2 0x44D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D9 DUP3 PUSH2 0x47C JUMP JUMPDEST SWAP2 POP PUSH2 0x4E4 DUP4 PUSH2 0x47C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4FC JUMPI PUSH2 0x4FB PUSH2 0x44D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 MLOAD 0xC CODECOPY EXTCODEHASH SWAP8 PUSH2 0xA713 BLOCKHASH 0xB8 GAS CALLCODE SMOD 0x5C 0x2E PUSH12 0x5ACC586275A3DD01AB0F9700 0xD4 BALANCE 0x4C PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "1418:253:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1465:204;;;:::i;:::-;;;1500:15;1518:18;1534:1;1518:15;:18::i;:::-;1500:36;;1546:15;1564:31;1580:14;1564:15;:31::i;:::-;1546:49;;1605:15;1623:8;1629:1;1623;:5;;:8;;;;:::i;:::-;1605:26;;1660:1;1648:9;1655:1;1648;:6;;:9;;;;:::i;:::-;:13;1641:21;;;;:::i;:::-;;1490:179;;;1465:204::o;119:130::-;168:15;;:::i;:::-;216:1;205:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;195:1;:7;;:23;;;;241:1;228;:7;;;236:1;228:10;;;;;;;;:::i;:::-;;;;;;;:14;;;;;119:130;;;:::o;255:914::-;325:15;;:::i;:::-;373:35;377:1;:7;;;:14;393:1;:7;;;:14;373:3;:35::i;:::-;362:47;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;352:1;:7;;:57;;;;419:10;448:6;443:394;464:1;:7;;;:14;460:1;:18;443:394;;;499:10;512;517:1;520;512:4;:10::i;:::-;499:23;;536:10;549;554:1;557;549:4;:10::i;:::-;536:23;;630:5;622;614;:13;:21;601:1;:7;;;609:1;601:10;;;;;;;;:::i;:::-;;;;;;;:34;;;;;674:5;666;658;:13;:21;:71;;;;701:14;692:5;684;:13;:31;:44;;;;;727:1;719:5;:9;684:44;658:71;654:158;;;759:1;751:9;;654:158;;;811:1;803:9;;654:158;485:352;;480:3;;;;:::i;:::-;;;443:394;;;;858:1;850:5;:9;846:317;;;921:22;974:1;957;:7;;;:14;:18;;;;:::i;:::-;946:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;921:55;;990:6;1010:77;1026:1;:7;;;:14;1022:1;:18;1010:77;;;1077:1;:7;;;1085:1;1077:10;;;;;;;;:::i;:::-;;;;;;;;1063:8;1072:1;1063:11;;;;;;;;:::i;:::-;;;;;;;:24;;;;;1042:3;;;;:::i;:::-;;;1010:77;;;1115:5;1101:8;1110:1;1101:11;;;;;;;;:::i;:::-;;;;;;;:19;;;;;1144:8;1134:1;:7;;:18;;;;861:302;;846:317;342:827;255:914;;;;:::o;1175:139::-;1241:4;1272:1;:7;;;:14;1264:5;:22;:43;;1306:1;1264:43;;;1289:1;:7;;;1297:5;1289:14;;;;;;;;:::i;:::-;;;;;;;;1264:43;1257:50;;1175:139;;;;:::o;1320:94::-;1371:4;1398:1;1394;:5;:13;;1406:1;1394:13;;;1402:1;1394:13;1387:20;;1320:94;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;:::o;7:180:1:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:180;241:77;238:1;231:88;338:4;335:1;328:15;362:4;359:1;352:15;379:180;427:77;424:1;417:88;524:4;521:1;514:15;548:4;545:1;538:15;565:180;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:77;788:7;817:5;806:16;;751:77;;;:::o;834:233::-;873:3;896:24;914:5;896:24;:::i;:::-;887:33;;942:66;935:5;932:77;929:103;;1012:18;;:::i;:::-;929:103;1059:1;1052:5;1048:13;1041:20;;834:233;;;:::o;1073:191::-;1113:3;1132:20;1150:1;1132:20;:::i;:::-;1127:25;;1166:20;1184:1;1166:20;:::i;:::-;1161:25;;1209:1;1206;1202:9;1195:16;;1230:3;1227:1;1224:10;1221:36;;;1237:18;;:::i;:::-;1221:36;1073:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "267200",
								"executionCost": "306",
								"totalCost": "267506"
							},
							"external": {
								"f()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1418,
									"end": 1671,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1418,
									"end": 1671,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1418,
									"end": 1671,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1418,
									"end": 1671,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1418,
									"end": 1671,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1418,
									"end": 1671,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1418,
									"end": 1671,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1418,
									"end": 1671,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1418,
									"end": 1671,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1418,
									"end": 1671,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1418,
									"end": 1671,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1418,
									"end": 1671,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1418,
									"end": 1671,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1418,
									"end": 1671,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1418,
									"end": 1671,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1418,
									"end": 1671,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1418,
									"end": 1671,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1418,
									"end": 1671,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1418,
									"end": 1671,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1418,
									"end": 1671,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1418,
									"end": 1671,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b3510c393f9761a71340b85af2075c2e6b5acc586275a3dd01ab0f9700d4314c64736f6c63430008120033",
									".code": [
										{
											"begin": 1418,
											"end": 1671,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "PUSH",
											"source": 0,
											"value": "26121FF0"
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1671,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1669,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1465,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1465,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1465,
											"end": 1669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1669,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1465,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1669,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1669,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1465,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1518,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1534,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1518,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1518,
											"end": 1536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1536,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1518,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1536,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1580,
											"end": 1594,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1564,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1564,
											"end": 1595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1595,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1564,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1595,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1623,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1629,
											"end": 1630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1624,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1623,
											"end": 1628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1631,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1631,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1623,
											"end": 1631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1631,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1623,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1655,
											"end": 1656,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1648,
											"end": 1649,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1648,
											"end": 1654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1657,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1648,
											"end": 1657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1657,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1648,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1661,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1641,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1641,
											"end": 1662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1641,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1641,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1641,
											"end": 1662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1641,
											"end": 1662,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1641,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1641,
											"end": 1662,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1641,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 119,
											"end": 249,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 119,
											"end": 249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 168,
											"end": 183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 168,
											"end": 183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 168,
											"end": 183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 168,
											"end": 183,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 168,
											"end": 183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 216,
											"end": 217,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 205,
											"end": 218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 205,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 205,
											"end": 218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 218,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 205,
											"end": 218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 205,
											"end": 218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 205,
											"end": 218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 195,
											"end": 196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 195,
											"end": 202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 195,
											"end": 218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 195,
											"end": 218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 195,
											"end": 218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 195,
											"end": 218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 241,
											"end": 242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 228,
											"end": 229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 228,
											"end": 235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 228,
											"end": 235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 228,
											"end": 235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 236,
											"end": 237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 228,
											"end": 238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 228,
											"end": 238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 228,
											"end": 238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 228,
											"end": 238,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 228,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 228,
											"end": 238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 228,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 228,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 228,
											"end": 238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 228,
											"end": 238,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 228,
											"end": 238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 228,
											"end": 238,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 228,
											"end": 238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 228,
											"end": 238,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 238,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 228,
											"end": 238,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 228,
											"end": 238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 228,
											"end": 242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 228,
											"end": 242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 228,
											"end": 242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 228,
											"end": 242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 228,
											"end": 242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 119,
											"end": 249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 119,
											"end": 249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 119,
											"end": 249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 119,
											"end": 249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 255,
											"end": 1169,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 255,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 325,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 325,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 325,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 325,
											"end": 340,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 325,
											"end": 340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 373,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 377,
											"end": 378,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 377,
											"end": 384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 377,
											"end": 384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 377,
											"end": 391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 393,
											"end": 394,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 393,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 393,
											"end": 400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 393,
											"end": 407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 373,
											"end": 408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 408,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 373,
											"end": 408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 362,
											"end": 409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 362,
											"end": 409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 362,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 362,
											"end": 409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 362,
											"end": 409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 362,
											"end": 409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 409,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 362,
											"end": 409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 362,
											"end": 409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 362,
											"end": 409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 352,
											"end": 353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 352,
											"end": 359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 352,
											"end": 359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 352,
											"end": 409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 352,
											"end": 409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 352,
											"end": 409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 352,
											"end": 409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 419,
											"end": 429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 448,
											"end": 454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 443,
											"end": 837,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 443,
											"end": 837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 464,
											"end": 465,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 464,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 464,
											"end": 471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 464,
											"end": 478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 460,
											"end": 461,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 460,
											"end": 478,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 443,
											"end": 837,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 443,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 443,
											"end": 837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 499,
											"end": 509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 517,
											"end": 518,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 520,
											"end": 521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 512,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 512,
											"end": 522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 512,
											"end": 522,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 512,
											"end": 522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 499,
											"end": 522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 499,
											"end": 522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 536,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 554,
											"end": 555,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 557,
											"end": 558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 549,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 549,
											"end": 559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 559,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 549,
											"end": 559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 536,
											"end": 559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 630,
											"end": 635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 622,
											"end": 627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 614,
											"end": 619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 614,
											"end": 627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 614,
											"end": 635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 601,
											"end": 602,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 601,
											"end": 608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 601,
											"end": 608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 609,
											"end": 610,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 601,
											"end": 611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 601,
											"end": 611,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 601,
											"end": 611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 601,
											"end": 611,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 601,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 601,
											"end": 611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 601,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 601,
											"end": 611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 601,
											"end": 611,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 601,
											"end": 611,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 601,
											"end": 611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 601,
											"end": 611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 601,
											"end": 611,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 601,
											"end": 611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 601,
											"end": 611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 601,
											"end": 611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 601,
											"end": 635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 601,
											"end": 635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 601,
											"end": 635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 601,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 601,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 674,
											"end": 679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 666,
											"end": 671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 658,
											"end": 663,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 658,
											"end": 671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 658,
											"end": 679,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 658,
											"end": 729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 658,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 658,
											"end": 729,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 658,
											"end": 729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 701,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 684,
											"end": 689,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 684,
											"end": 697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 684,
											"end": 715,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 684,
											"end": 728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 684,
											"end": 728,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 684,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 684,
											"end": 728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 684,
											"end": 728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 727,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 724,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 719,
											"end": 728,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 684,
											"end": 728,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 684,
											"end": 728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 658,
											"end": 729,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 658,
											"end": 729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 654,
											"end": 812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 654,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 654,
											"end": 812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 759,
											"end": 760,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 751,
											"end": 760,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 751,
											"end": 760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 654,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 654,
											"end": 812,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 654,
											"end": 812,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 654,
											"end": 812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 811,
											"end": 812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 812,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 803,
											"end": 812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 654,
											"end": 812,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 654,
											"end": 812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 485,
											"end": 837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 485,
											"end": 837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 480,
											"end": 483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 480,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 480,
											"end": 483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 480,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 480,
											"end": 483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 480,
											"end": 483,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 480,
											"end": 483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 480,
											"end": 483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 480,
											"end": 483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 443,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 443,
											"end": 837,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 443,
											"end": 837,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 443,
											"end": 837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 443,
											"end": 837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 858,
											"end": 859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 850,
											"end": 859,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1163,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 846,
											"end": 1163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 921,
											"end": 943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 974,
											"end": 975,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 957,
											"end": 958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 957,
											"end": 964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 964,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 971,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 957,
											"end": 975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 957,
											"end": 975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 957,
											"end": 975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 975,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 957,
											"end": 975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 946,
											"end": 976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 946,
											"end": 976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 946,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 946,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 946,
											"end": 976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 946,
											"end": 976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 946,
											"end": 976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 946,
											"end": 976,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 946,
											"end": 976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 946,
											"end": 976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 946,
											"end": 976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 946,
											"end": 976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 946,
											"end": 976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 946,
											"end": 976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 946,
											"end": 976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 921,
											"end": 976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 921,
											"end": 976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 990,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1087,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1010,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1027,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1022,
											"end": 1023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1022,
											"end": 1040,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1010,
											"end": 1087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1078,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1077,
											"end": 1087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1073,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1074,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1074,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1063,
											"end": 1074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1063,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1063,
											"end": 1074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1074,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1063,
											"end": 1074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1074,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1063,
											"end": 1074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1074,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1074,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1074,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1042,
											"end": 1045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1042,
											"end": 1045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1045,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1042,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1010,
											"end": 1087,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1087,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1010,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1115,
											"end": 1120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1110,
											"end": 1111,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1112,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1101,
											"end": 1112,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1101,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1101,
											"end": 1112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1112,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1101,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1112,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1101,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1112,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1101,
											"end": 1112,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1112,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1101,
											"end": 1112,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1112,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1135,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1134,
											"end": 1141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 846,
											"end": 1163,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 846,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 342,
											"end": 1169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 255,
											"end": 1169,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 255,
											"end": 1169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 255,
											"end": 1169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 255,
											"end": 1169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 255,
											"end": 1169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1314,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1175,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1273,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1269,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1286,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1264,
											"end": 1307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1264,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1264,
											"end": 1307,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1307,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1264,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1290,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1289,
											"end": 1296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1303,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1289,
											"end": 1303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1289,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1289,
											"end": 1303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1303,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1289,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1303,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1289,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1303,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1307,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1264,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1314,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1320,
											"end": 1414,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1320,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1399,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1394,
											"end": 1407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1406,
											"end": 1407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1394,
											"end": 1407,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1407,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1394,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1403,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1407,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1394,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1387,
											"end": 1407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1387,
											"end": 1407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1320,
											"end": 1414,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1320,
											"end": 1414,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1320,
											"end": 1414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1320,
											"end": 1414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1320,
											"end": 1414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "18"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 7,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 55,
											"end": 132,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 45,
											"end": 133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 152,
											"end": 156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 149,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 176,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 173,
											"end": 174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 181,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 193,
											"end": 373,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 193,
											"end": 373,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 241,
											"end": 318,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 238,
											"end": 239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 319,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 338,
											"end": 342,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 335,
											"end": 336,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 328,
											"end": 343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 362,
											"end": 366,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 359,
											"end": 360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 352,
											"end": 367,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 379,
											"end": 559,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 379,
											"end": 559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 427,
											"end": 504,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 424,
											"end": 425,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 524,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 521,
											"end": 522,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 514,
											"end": 529,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 548,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 545,
											"end": 546,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 553,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 565,
											"end": 745,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 565,
											"end": 745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 613,
											"end": 690,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 610,
											"end": 611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 691,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 710,
											"end": 714,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 707,
											"end": 708,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 700,
											"end": 715,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 734,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 731,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 739,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 751,
											"end": 828,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 751,
											"end": 828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 788,
											"end": 795,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 806,
											"end": 822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 806,
											"end": 822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 751,
											"end": 828,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 751,
											"end": 828,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 751,
											"end": 828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1067,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 834,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 873,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 914,
											"end": 919,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 896,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 896,
											"end": 920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 896,
											"end": 920,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 896,
											"end": 920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 887,
											"end": 920,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 887,
											"end": 920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 932,
											"end": 1009,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 929,
											"end": 1032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 929,
											"end": 1032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1012,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1012,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1030,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1012,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 929,
											"end": 1032,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 929,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1060,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1052,
											"end": 1057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1061,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1264,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1073,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1150,
											"end": 1151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1132,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1132,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1184,
											"end": 1185,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1166,
											"end": 1186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1186,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1166,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1186,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1186,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1210,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1233,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1227,
											"end": 1228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1234,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1257,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1221,
											"end": 1257,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1237,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1257,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1221,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1264,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1264,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contract-libraries.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"f()": "26121ff0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"f\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-libraries.sol\":\"C\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-libraries.sol\":{\"keccak256\":\"0x1b4a8e02c97c73ade3f93559a6f76df17b691999afe8c175746138d7c5274419\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://12b30494c2c2fd705518efe36cab76382fa8086589c8572b50c840eca2ef50fe\",\"dweb:/ipfs/QmbyHHf2tZJ9n7DkimkJ6q8jqaBRcKUufNqZgmJY6YTYyL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contract-libraries.sol": {
				"ast": {
					"absolutePath": "contract-libraries.sol",
					"exportedSymbols": {
						"BigInt": [
							234
						],
						"C": [
							280
						],
						"bigint": [
							5
						]
					},
					"id": 281,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:0"
						},
						{
							"canonicalName": "bigint",
							"id": 5,
							"members": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "limbs",
									"nameLocation": "88:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 5,
									"src": "81:12:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 2,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "81:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 3,
										"nodeType": "ArrayTypeName",
										"src": "81:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "bigint",
							"nameLocation": "68:6:0",
							"nodeType": "StructDefinition",
							"scope": 281,
							"src": "61:35:0",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BigInt",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 234,
							"linearizedBaseContracts": [
								234
							],
							"name": "BigInt",
							"nameLocation": "106:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "185:64:0",
										"statements": [
											{
												"expression": {
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 13,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "195:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																"typeString": "struct bigint memory"
															}
														},
														"id": 15,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "197:5:0",
														"memberName": "limbs",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "195:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "216:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "205:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 16,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "209:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 17,
																"nodeType": "ArrayTypeName",
																"src": "209:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "205:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "195:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "195:23:0"
											},
											{
												"expression": {
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 23,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "228:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																	"typeString": "struct bigint memory"
																}
															},
															"id": 26,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "230:5:0",
															"memberName": "limbs",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "228:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 27,
														"indexExpression": {
															"hexValue": "30",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "236:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "228:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 28,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "241:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "228:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "228:14:0"
											}
										]
									},
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fromUint",
									"nameLocation": "128:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "142:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "137:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "137:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "136:8:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "182:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "168:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
													"typeString": "struct bigint"
												},
												"typeName": {
													"id": 10,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 9,
														"name": "bigint",
														"nameLocations": [
															"168:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "168:6:0"
													},
													"referencedDeclaration": 5,
													"src": "168:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_bigint_$5_storage_ptr",
														"typeString": "struct bigint"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "167:17:0"
									},
									"scope": 234,
									"src": "119:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "342:827:0",
										"statements": [
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 44,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "352:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																"typeString": "struct bigint memory"
															}
														},
														"id": 46,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "354:5:0",
														"memberName": "limbs",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "352:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"expression": {
																				"id": 51,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 35,
																				"src": "377:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																					"typeString": "struct bigint memory"
																				}
																			},
																			"id": 52,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "379:5:0",
																			"memberName": "limbs",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 4,
																			"src": "377:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 53,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "385:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "377:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"expression": {
																				"id": 54,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 38,
																				"src": "393:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																					"typeString": "struct bigint memory"
																				}
																			},
																			"id": 55,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "395:5:0",
																			"memberName": "limbs",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 4,
																			"src": "393:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 56,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "401:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "393:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 50,
																	"name": "max",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "373:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "373:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "362:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 47,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "366:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 48,
																"nodeType": "ArrayTypeName",
																"src": "366:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "362:47:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "352:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "352:57:0"
											},
											{
												"assignments": [
													62
												],
												"declarations": [
													{
														"constant": false,
														"id": 62,
														"mutability": "mutable",
														"name": "carry",
														"nameLocation": "424:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "419:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 61,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "419:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 64,
												"initialValue": {
													"hexValue": "30",
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "432:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "419:14:0"
											},
											{
												"body": {
													"id": 133,
													"nodeType": "Block",
													"src": "485:352:0",
													"statements": [
														{
															"assignments": [
																78
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 78,
																	"mutability": "mutable",
																	"name": "limbA",
																	"nameLocation": "504:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 133,
																	"src": "499:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 77,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "499:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 83,
															"initialValue": {
																"arguments": [
																	{
																		"id": 80,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 35,
																		"src": "517:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																			"typeString": "struct bigint memory"
																		}
																	},
																	{
																		"id": 81,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 66,
																		"src": "520:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																			"typeString": "struct bigint memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 79,
																	"name": "limb",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "512:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_bigint_$5_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (struct bigint memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "512:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "499:23:0"
														},
														{
															"assignments": [
																85
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 85,
																	"mutability": "mutable",
																	"name": "limbB",
																	"nameLocation": "541:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 133,
																	"src": "536:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 84,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "536:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 90,
															"initialValue": {
																"arguments": [
																	{
																		"id": 87,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 38,
																		"src": "554:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																			"typeString": "struct bigint memory"
																		}
																	},
																	{
																		"id": 88,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 66,
																		"src": "557:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																			"typeString": "struct bigint memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 86,
																	"name": "limb",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "549:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_bigint_$5_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (struct bigint memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "549:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "536:23:0"
														},
														{
															"id": 132,
															"nodeType": "UncheckedBlock",
															"src": "573:254:0",
															"statements": [
																{
																	"expression": {
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 91,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 42,
																					"src": "601:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																						"typeString": "struct bigint memory"
																					}
																				},
																				"id": 94,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "603:5:0",
																				"memberName": "limbs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 4,
																				"src": "601:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 95,
																			"indexExpression": {
																				"id": 93,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 66,
																				"src": "609:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "601:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 98,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 96,
																					"name": "limbA",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 78,
																					"src": "614:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 97,
																					"name": "limbB",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 85,
																					"src": "622:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "614:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 99,
																				"name": "carry",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 62,
																				"src": "630:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "614:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "601:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 102,
																	"nodeType": "ExpressionStatement",
																	"src": "601:34:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 105,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 103,
																					"name": "limbA",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 78,
																					"src": "658:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 104,
																					"name": "limbB",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 85,
																					"src": "666:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "658:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 106,
																				"name": "limbA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 78,
																				"src": "674:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "658:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 120,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 116,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 110,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 108,
																								"name": "limbA",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 78,
																								"src": "684:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 109,
																								"name": "limbB",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 85,
																								"src": "692:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "684:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"expression": {
																								"arguments": [
																									{
																										"id": 113,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "706:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_uint256_$",
																											"typeString": "type(uint256)"
																										},
																										"typeName": {
																											"id": 112,
																											"name": "uint",
																											"nodeType": "ElementaryTypeName",
																											"src": "706:4:0",
																											"typeDescriptions": {}
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_type$_t_uint256_$",
																											"typeString": "type(uint256)"
																										}
																									],
																									"id": 111,
																									"name": "type",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967269,
																									"src": "701:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 114,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "701:10:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_meta_type_t_uint256",
																									"typeString": "type(uint256)"
																								}
																							},
																							"id": 115,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "712:3:0",
																							"memberName": "max",
																							"nodeType": "MemberAccess",
																							"src": "701:14:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "684:31:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&&",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 119,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 117,
																							"name": "carry",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 62,
																							"src": "719:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 118,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "727:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "719:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "684:44:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 121,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "683:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "658:71:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"expression": {
																			"id": 129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 127,
																				"name": "carry",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 62,
																				"src": "803:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "811:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "803:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 130,
																		"nodeType": "ExpressionStatement",
																		"src": "803:9:0"
																	},
																	"id": 131,
																	"nodeType": "IfStatement",
																	"src": "654:158:0",
																	"trueBody": {
																		"expression": {
																			"id": 125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 123,
																				"name": "carry",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 62,
																				"src": "751:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "759:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "751:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 126,
																		"nodeType": "ExpressionStatement",
																		"src": "751:9:0"
																	}
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 69,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "460:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 70,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 42,
																"src": "464:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																	"typeString": "struct bigint memory"
																}
															},
															"id": 71,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "466:5:0",
															"memberName": "limbs",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "464:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "472:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "464:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "460:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 134,
												"initializationExpression": {
													"assignments": [
														66
													],
													"declarations": [
														{
															"constant": false,
															"id": 66,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "453:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 134,
															"src": "448:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 65,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "448:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 68,
													"initialValue": {
														"hexValue": "30",
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "457:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "448:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "480:3:0",
														"subExpression": {
															"id": 74,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "482:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 76,
													"nodeType": "ExpressionStatement",
													"src": "480:3:0"
												},
												"nodeType": "ForStatement",
												"src": "443:394:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 135,
														"name": "carry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "850:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "858:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "850:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"nodeType": "IfStatement",
												"src": "846:317:0",
												"trueBody": {
													"id": 190,
													"nodeType": "Block",
													"src": "861:302:0",
													"statements": [
														{
															"assignments": [
																142
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 142,
																	"mutability": "mutable",
																	"name": "newLimbs",
																	"nameLocation": "935:8:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 190,
																	"src": "921:22:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 140,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "921:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 141,
																		"nodeType": "ArrayTypeName",
																		"src": "921:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 152,
															"initialValue": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"expression": {
																					"id": 146,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 42,
																					"src": "957:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																						"typeString": "struct bigint memory"
																					}
																				},
																				"id": 147,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "959:5:0",
																				"memberName": "limbs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 4,
																				"src": "957:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "965:6:0",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "957:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "974:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "957:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "946:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (uint256[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 143,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "950:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 144,
																		"nodeType": "ArrayTypeName",
																		"src": "950:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[]"
																		}
																	}
																},
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "946:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "921:55:0"
														},
														{
															"assignments": [
																154
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 154,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "995:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 190,
																	"src": "990:6:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 153,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "990:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 155,
															"nodeType": "VariableDeclarationStatement",
															"src": "990:6:0"
														},
														{
															"body": {
																"expression": {
																	"id": 175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 168,
																			"name": "newLimbs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 142,
																			"src": "1063:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 170,
																		"indexExpression": {
																			"id": 169,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 154,
																			"src": "1072:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "1063:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"baseExpression": {
																			"expression": {
																				"id": 171,
																				"name": "r",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 42,
																				"src": "1077:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																					"typeString": "struct bigint memory"
																				}
																			},
																			"id": 172,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1079:5:0",
																			"memberName": "limbs",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 4,
																			"src": "1077:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 174,
																		"indexExpression": {
																			"id": 173,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 154,
																			"src": "1085:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1077:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1063:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 176,
																"nodeType": "ExpressionStatement",
																"src": "1063:24:0"
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 160,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "1022:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 161,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 42,
																			"src": "1026:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																				"typeString": "struct bigint memory"
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1028:5:0",
																		"memberName": "limbs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4,
																		"src": "1026:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1034:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1026:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1022:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 177,
															"initializationExpression": {
																"expression": {
																	"id": 158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 156,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 154,
																		"src": "1015:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "30",
																		"id": 157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1019:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "1015:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 159,
																"nodeType": "ExpressionStatement",
																"src": "1015:5:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "1042:3:0",
																	"subExpression": {
																		"id": 165,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 154,
																		"src": "1044:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 167,
																"nodeType": "ExpressionStatement",
																"src": "1042:3:0"
															},
															"nodeType": "ForStatement",
															"src": "1010:77:0"
														},
														{
															"expression": {
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 178,
																		"name": "newLimbs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 142,
																		"src": "1101:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 180,
																	"indexExpression": {
																		"id": 179,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 154,
																		"src": "1110:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1101:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 181,
																	"name": "carry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "1115:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1101:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 183,
															"nodeType": "ExpressionStatement",
															"src": "1101:19:0"
														},
														{
															"expression": {
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 184,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 42,
																		"src": "1134:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																			"typeString": "struct bigint memory"
																		}
																	},
																	"id": 186,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1136:5:0",
																	"memberName": "limbs",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4,
																	"src": "1134:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 187,
																	"name": "newLimbs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "1144:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"src": "1134:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 189,
															"nodeType": "ExpressionStatement",
															"src": "1134:18:0"
														}
													]
												}
											}
										]
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "264:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "282:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "268:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
													"typeString": "struct bigint"
												},
												"typeName": {
													"id": 34,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 33,
														"name": "bigint",
														"nameLocations": [
															"268:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "268:6:0"
													},
													"referencedDeclaration": 5,
													"src": "268:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_bigint_$5_storage_ptr",
														"typeString": "struct bigint"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "299:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "285:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
													"typeString": "struct bigint"
												},
												"typeName": {
													"id": 37,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 36,
														"name": "bigint",
														"nameLocations": [
															"285:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "285:6:0"
													},
													"referencedDeclaration": 5,
													"src": "285:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_bigint_$5_storage_ptr",
														"typeString": "struct bigint"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "267:34:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "339:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "325:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
													"typeString": "struct bigint"
												},
												"typeName": {
													"id": 41,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 40,
														"name": "bigint",
														"nameLocations": [
															"325:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "325:6:0"
													},
													"referencedDeclaration": 5,
													"src": "325:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_bigint_$5_storage_ptr",
														"typeString": "struct bigint"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:17:0"
									},
									"scope": 234,
									"src": "255:914:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "1247:67:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 203,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "1264:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"expression": {
																	"id": 204,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 196,
																	"src": "1272:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																		"typeString": "struct bigint memory"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1274:5:0",
																"memberName": "limbs",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1272:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1280:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1272:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1264:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1306:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1264:43:0",
													"trueExpression": {
														"baseExpression": {
															"expression": {
																"id": 208,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "1289:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																	"typeString": "struct bigint memory"
																}
															},
															"id": 209,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1291:5:0",
															"memberName": "limbs",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 211,
														"indexExpression": {
															"id": 210,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "1297:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1289:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 202,
												"id": 214,
												"nodeType": "Return",
												"src": "1257:50:0"
											}
										]
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "limb",
									"nameLocation": "1184:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1203:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1189:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
													"typeString": "struct bigint"
												},
												"typeName": {
													"id": 195,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 194,
														"name": "bigint",
														"nameLocations": [
															"1189:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1189:6:0"
													},
													"referencedDeclaration": 5,
													"src": "1189:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_bigint_$5_storage_ptr",
														"typeString": "struct bigint"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1211:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1206:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1206:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1188:29:0"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1241:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1241:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:6:0"
									},
									"scope": 234,
									"src": "1175:139:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "1377:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 225,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "1394:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 226,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "1398:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1394:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 229,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "1406:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1394:13:0",
													"trueExpression": {
														"id": 228,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "1402:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 224,
												"id": 231,
												"nodeType": "Return",
												"src": "1387:20:0"
											}
										]
									},
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "1329:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1338:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1333:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1333:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1346:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1341:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1341:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1332:16:0"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1371:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1371:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1370:6:0"
									},
									"scope": 234,
									"src": "1320:94:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 281,
							"src": "98:1318:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "C",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 280,
							"linearizedBaseContracts": [
								280
							],
							"name": "C",
							"nameLocation": "1427:1:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 238,
									"libraryName": {
										"id": 235,
										"name": "BigInt",
										"nameLocations": [
											"1441:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 234,
										"src": "1441:6:0"
									},
									"nodeType": "UsingForDirective",
									"src": "1435:24:0",
									"typeName": {
										"id": 237,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 236,
											"name": "bigint",
											"nameLocations": [
												"1452:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "1452:6:0"
										},
										"referencedDeclaration": 5,
										"src": "1452:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_bigint_$5_storage_ptr",
											"typeString": "struct bigint"
										}
									}
								},
								{
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "1490:179:0",
										"statements": [
											{
												"assignments": [
													243
												],
												"declarations": [
													{
														"constant": false,
														"id": 243,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "1514:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 278,
														"src": "1500:15:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
															"typeString": "struct bigint"
														},
														"typeName": {
															"id": 242,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 241,
																"name": "bigint",
																"nameLocations": [
																	"1500:6:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 5,
																"src": "1500:6:0"
															},
															"referencedDeclaration": 5,
															"src": "1500:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_bigint_$5_storage_ptr",
																"typeString": "struct bigint"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 248,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "37",
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1534:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															}
														],
														"expression": {
															"id": 244,
															"name": "BigInt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "1518:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_BigInt_$234_$",
																"typeString": "type(library BigInt)"
															}
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1525:8:0",
														"memberName": "fromUint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 32,
														"src": "1518:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_bigint_$5_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct bigint memory)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1518:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
														"typeString": "struct bigint memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1500:36:0"
											},
											{
												"assignments": [
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 251,
														"mutability": "mutable",
														"name": "y",
														"nameLocation": "1560:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 278,
														"src": "1546:15:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
															"typeString": "struct bigint"
														},
														"typeName": {
															"id": 250,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 249,
																"name": "bigint",
																"nameLocations": [
																	"1546:6:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 5,
																"src": "1546:6:0"
															},
															"referencedDeclaration": 5,
															"src": "1546:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_bigint_$5_storage_ptr",
																"typeString": "struct bigint"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 260,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1585:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 255,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "1585:4:0",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 254,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1580:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1580:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1591:3:0",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "1580:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 252,
															"name": "BigInt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "1564:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_BigInt_$234_$",
																"typeString": "type(library BigInt)"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1571:8:0",
														"memberName": "fromUint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 32,
														"src": "1564:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_bigint_$5_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct bigint memory)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1564:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
														"typeString": "struct bigint memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1546:49:0"
											},
											{
												"assignments": [
													263
												],
												"declarations": [
													{
														"constant": false,
														"id": 263,
														"mutability": "mutable",
														"name": "z",
														"nameLocation": "1619:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 278,
														"src": "1605:15:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
															"typeString": "struct bigint"
														},
														"typeName": {
															"id": 262,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 261,
																"name": "bigint",
																"nameLocations": [
																	"1605:6:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 5,
																"src": "1605:6:0"
															},
															"referencedDeclaration": 5,
															"src": "1605:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_bigint_$5_storage_ptr",
																"typeString": "struct bigint"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 268,
												"initialValue": {
													"arguments": [
														{
															"id": 266,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "1629:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																"typeString": "struct bigint memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																"typeString": "struct bigint memory"
															}
														],
														"expression": {
															"id": 264,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "1623:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																"typeString": "struct bigint memory"
															}
														},
														"id": 265,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1625:3:0",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 193,
														"src": "1623:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_bigint_$5_memory_ptr_$_t_struct$_bigint_$5_memory_ptr_$returns$_t_struct$_bigint_$5_memory_ptr_$attached_to$_t_struct$_bigint_$5_memory_ptr_$",
															"typeString": "function (struct bigint memory,struct bigint memory) pure returns (struct bigint memory)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1623:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
														"typeString": "struct bigint memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1605:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1655:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"expression": {
																		"id": 270,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 263,
																		"src": "1648:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_bigint_$5_memory_ptr",
																			"typeString": "struct bigint memory"
																		}
																	},
																	"id": 271,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1650:4:0",
																	"memberName": "limb",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 216,
																	"src": "1648:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_bigint_$5_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_struct$_bigint_$5_memory_ptr_$",
																		"typeString": "function (struct bigint memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1648:9:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1660:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1648:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 269,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "1641:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1641:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "1641:21:0"
											}
										]
									},
									"functionSelector": "26121ff0",
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "f",
									"nameLocation": "1474:1:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1475:2:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1490:0:0"
									},
									"scope": 280,
									"src": "1465:204:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 281,
							"src": "1418:253:0",
							"usedErrors": []
						}
					],
					"src": "36:1635:0"
				},
				"id": 0
			}
		}
	}
}