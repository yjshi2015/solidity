{
	"id": "90bf3bb0da20deb97f3e7804c0b990b0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract-iteratorMapping.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.8;\n\nstruct IndexValue { uint keyIndex; uint value; }\nstruct KeyFlag { uint key; bool deleted; }\n\n/*\n关键结构\n*/\nstruct itmap {\n    mapping(uint => IndexValue) data;\n    KeyFlag[] keys;\n    uint size;\n}\n\ntype Iterator is uint;\n\nlibrary IterableMapping {\n    //插入元素\n    function insert(itmap storage self, uint key, uint value) internal returns (bool replaced) {\n        uint keyIndex = self.data[key].keyIndex;\n        self.data[key].value = value;\n        if (keyIndex > 0)\n            return true;\n        else {\n            keyIndex = self.keys.length;\n            self.keys.push();\n            self.data[key].keyIndex = keyIndex + 1;\n            self.keys[keyIndex].key = key;\n            self.size++;\n            return false;\n        }\n    }\n\n    //删除元素\n    function remove(itmap storage self, uint key) internal returns (bool success) {\n        uint keyIndex = self.data[key].keyIndex;\n        if (keyIndex == 0)\n            return false;\n        delete self.data[key];\n        self.keys[keyIndex - 1].deleted = true;\n        self.size --;\n    }\n\n    //是否包含元素\n    function contains(itmap storage self, uint key) internal view returns (bool) {\n        return self.data[key].keyIndex > 0;\n    }\n\n    //递归？？？\n    function iterateStart(itmap storage self) internal view returns (Iterator) {\n        return iteratorSkipDeleted(self, 0);\n    }\n\n    function iterateValid(itmap storage self, Iterator iterator) internal view returns (bool) {\n        return Iterator.unwrap(iterator) < self.keys.length;\n    }\n\n    function iterateNext(itmap storage self, Iterator iterator) internal view returns (Iterator) {\n        return iteratorSkipDeleted(self, Iterator.unwrap(iterator) + 1);\n    }\n\n    function iterateGet(itmap storage self, Iterator iterator) internal view returns (uint key, uint value) {\n        uint keyIndex = Iterator.unwrap(iterator);\n        key = self.keys[keyIndex].key;\n        value = self.data[key].value;\n    }\n\n    // whhile what ???\n    function iteratorSkipDeleted(itmap storage self, uint keyIndex) private view returns (Iterator) {\n        while (keyIndex < self.keys.length && self.keys[keyIndex].deleted)\n            keyIndex++;\n        return Iterator.wrap(keyIndex);\n    }\n}\n\n// How to use it\ncontract User {\n    // Just a struct holding our data.\n    itmap data;\n    // Apply library functions to the data type.\n    using IterableMapping for itmap;\n\n    // Insert something\n    function insert(uint k, uint v) public returns (uint size) {\n        // This calls IterableMapping.insert(data, k, v)\n        data.insert(k, v);\n        // We can still access members of the struct,\n        // but we should take care not to mess with them.\n        return data.size;\n    }\n\n    // Computes the sum of all stored data.\n    function sum() public view returns (uint s) {\n        for (\n            Iterator i = data.iterateStart();\n            data.iterateValid(i);\n            i = data.iterateNext(i)\n        ) {\n            (, uint value) = data.iterateGet(i);\n            s += value;\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contract-iteratorMapping.sol": {
				"IterableMapping": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract-iteratorMapping.sol\":288:2303  library IterableMapping {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract-iteratorMapping.sol\":288:2303  library IterableMapping {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bf531f59d8e9f5d628bf347762d9349b610582711f7e71724a46ede3e5df0a9a64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf531f59d8e9f5d628bf347762d9349b610582711f7e71724a46ede3e5df0a9a64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF MSTORE8 0x1F MSIZE 0xD8 0xE9 CREATE2 0xD6 0x28 0xBF CALLVALUE PUSH24 0x62D9349B610582711F7E71724A46EDE3E5DF0A9A64736F6C PUSH4 0x43000812 STOP CALLER ",
							"sourceMap": "288:2015:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf531f59d8e9f5d628bf347762d9349b610582711f7e71724a46ede3e5df0a9a64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF MSTORE8 0x1F MSIZE 0xD8 0xE9 CREATE2 0xD6 0x28 0xBF CALLVALUE PUSH24 0x62D9349B610582711F7E71724A46EDE3E5DF0A9A64736F6C PUSH4 0x43000812 STOP CALLER ",
							"sourceMap": "288:2015:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"contains(struct itmap storage pointer,uint256)": "infinite",
								"insert(struct itmap storage pointer,uint256,uint256)": "infinite",
								"iterateGet(struct itmap storage pointer,Iterator)": "infinite",
								"iterateNext(struct itmap storage pointer,Iterator)": "infinite",
								"iterateStart(struct itmap storage pointer)": "infinite",
								"iterateValid(struct itmap storage pointer,Iterator)": "infinite",
								"iteratorSkipDeleted(struct itmap storage pointer,uint256)": "infinite",
								"remove(struct itmap storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 288,
									"end": 2303,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 288,
									"end": 2303,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bf531f59d8e9f5d628bf347762d9349b610582711f7e71724a46ede3e5df0a9a64736f6c63430008120033",
									".code": [
										{
											"begin": 288,
											"end": 2303,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 288,
											"end": 2303,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 288,
											"end": 2303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 288,
											"end": 2303,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 288,
											"end": 2303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 2303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 288,
											"end": 2303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 2303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 288,
											"end": 2303,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contract-iteratorMapping.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-iteratorMapping.sol\":\"IterableMapping\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-iteratorMapping.sol\":{\"keccak256\":\"0x63581d5fbc3390b688b4c24f1bf3c28c3cd2ccbcf3f9b7ef16986ce757992c0a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0a7b9a1cf232bdce93e8f1025aeca1341d23a1fae87f4cf024819c1699a4306\",\"dweb:/ipfs/QmSzG25uJEF5TZ2Kixr7fEu724hH6mQVpjNr95zX835Mqd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"User": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "k",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "v",
									"type": "uint256"
								}
							],
							"name": "insert",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "size",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sum",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "s",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract-iteratorMapping.sol\":2322:3124  contract User {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract-iteratorMapping.sol\":2322:3124  contract User {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1d834a1b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x853255cc\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contract-iteratorMapping.sol\":2508:2796  function insert(uint k, uint v) public returns (uint size) {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-iteratorMapping.sol\":2846:3122  function sum() public view returns (uint s) {... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-iteratorMapping.sol\":2508:2796  function insert(uint k, uint v) public returns (uint size) {... */\n    tag_8:\n        /* \"contract-iteratorMapping.sol\":2556:2565  uint size */\n      0x00\n        /* \"contract-iteratorMapping.sol\":2634:2651  data.insert(k, v) */\n      tag_15\n        /* \"contract-iteratorMapping.sol\":2646:2647  k */\n      dup4\n        /* \"contract-iteratorMapping.sol\":2649:2650  v */\n      dup4\n        /* \"contract-iteratorMapping.sol\":2634:2638  data */\n      0x00\n        /* \"contract-iteratorMapping.sol\":2634:2645  data.insert */\n      tag_16\n      swap1\n        /* \"contract-iteratorMapping.sol\":2634:2651  data.insert(k, v) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_15:\n      pop\n        /* \"contract-iteratorMapping.sol\":2780:2784  data */\n      0x00\n        /* \"contract-iteratorMapping.sol\":2780:2789  data.size */\n      0x02\n      add\n      sload\n        /* \"contract-iteratorMapping.sol\":2773:2789  return data.size */\n      swap1\n      pop\n        /* \"contract-iteratorMapping.sol\":2508:2796  function insert(uint k, uint v) public returns (uint size) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract-iteratorMapping.sol\":2846:3122  function sum() public view returns (uint s) {... */\n    tag_12:\n        /* \"contract-iteratorMapping.sol\":2882:2888  uint s */\n      0x00\n        /* \"contract-iteratorMapping.sol\":2918:2928  Iterator i */\n      dup1\n        /* \"contract-iteratorMapping.sol\":2931:2950  data.iterateStart() */\n      tag_21\n        /* \"contract-iteratorMapping.sol\":2931:2935  data */\n      0x00\n        /* \"contract-iteratorMapping.sol\":2931:2948  data.iterateStart */\n      tag_22\n        /* \"contract-iteratorMapping.sol\":2931:2950  data.iterateStart() */\n      jump\t// in\n    tag_21:\n        /* \"contract-iteratorMapping.sol\":2918:2950  Iterator i = data.iterateStart() */\n      swap1\n      pop\n        /* \"contract-iteratorMapping.sol\":2900:3116  for (... */\n    tag_18:\n        /* \"contract-iteratorMapping.sol\":2964:2984  data.iterateValid(i) */\n      tag_23\n        /* \"contract-iteratorMapping.sol\":2982:2983  i */\n      dup2\n        /* \"contract-iteratorMapping.sol\":2964:2968  data */\n      0x00\n        /* \"contract-iteratorMapping.sol\":2964:2981  data.iterateValid */\n      tag_24\n      swap1\n        /* \"contract-iteratorMapping.sol\":2964:2984  data.iterateValid(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_23:\n        /* \"contract-iteratorMapping.sol\":2900:3116  for (... */\n      iszero\n      tag_19\n      jumpi\n        /* \"contract-iteratorMapping.sol\":3049:3059  uint value */\n      0x00\n        /* \"contract-iteratorMapping.sol\":3063:3081  data.iterateGet(i) */\n      tag_25\n        /* \"contract-iteratorMapping.sol\":3079:3080  i */\n      dup3\n        /* \"contract-iteratorMapping.sol\":3063:3067  data */\n      0x00\n        /* \"contract-iteratorMapping.sol\":3063:3078  data.iterateGet */\n      tag_26\n      swap1\n        /* \"contract-iteratorMapping.sol\":3063:3081  data.iterateGet(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_25:\n        /* \"contract-iteratorMapping.sol\":3046:3081  (, uint value) = data.iterateGet(i) */\n      swap2\n      pop\n      pop\n        /* \"contract-iteratorMapping.sol\":3100:3105  value */\n      dup1\n        /* \"contract-iteratorMapping.sol\":3095:3105  s += value */\n      dup4\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      swap3\n      pop\n        /* \"contract-iteratorMapping.sol\":3032:3116  {... */\n      pop\n        /* \"contract-iteratorMapping.sol\":3002:3021  data.iterateNext(i) */\n      tag_29\n        /* \"contract-iteratorMapping.sol\":3019:3020  i */\n      dup2\n        /* \"contract-iteratorMapping.sol\":3002:3006  data */\n      0x00\n        /* \"contract-iteratorMapping.sol\":3002:3018  data.iterateNext */\n      tag_30\n      swap1\n        /* \"contract-iteratorMapping.sol\":3002:3021  data.iterateNext(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_29:\n        /* \"contract-iteratorMapping.sol\":2998:3021  i = data.iterateNext(i) */\n      swap1\n      pop\n        /* \"contract-iteratorMapping.sol\":2900:3116  for (... */\n      jump(tag_18)\n    tag_19:\n      pop\n        /* \"contract-iteratorMapping.sol\":2846:3122  function sum() public view returns (uint s) {... */\n      swap1\n      jump\t// out\n        /* \"contract-iteratorMapping.sol\":337:815  function insert(itmap storage self, uint key, uint value) internal returns (bool replaced) {... */\n    tag_16:\n        /* \"contract-iteratorMapping.sol\":413:426  bool replaced */\n      0x00\n        /* \"contract-iteratorMapping.sol\":438:451  uint keyIndex */\n      dup1\n        /* \"contract-iteratorMapping.sol\":454:458  self */\n      dup5\n        /* \"contract-iteratorMapping.sol\":454:463  self.data */\n      0x00\n      add\n        /* \"contract-iteratorMapping.sol\":454:468  self.data[key] */\n      0x00\n        /* \"contract-iteratorMapping.sol\":464:467  key */\n      dup6\n        /* \"contract-iteratorMapping.sol\":454:468  self.data[key] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract-iteratorMapping.sol\":454:477  self.data[key].keyIndex */\n      0x00\n      add\n      sload\n        /* \"contract-iteratorMapping.sol\":438:477  uint keyIndex = self.data[key].keyIndex */\n      swap1\n      pop\n        /* \"contract-iteratorMapping.sol\":510:515  value */\n      dup3\n        /* \"contract-iteratorMapping.sol\":487:491  self */\n      dup6\n        /* \"contract-iteratorMapping.sol\":487:496  self.data */\n      0x00\n      add\n        /* \"contract-iteratorMapping.sol\":487:501  self.data[key] */\n      0x00\n        /* \"contract-iteratorMapping.sol\":497:500  key */\n      dup7\n        /* \"contract-iteratorMapping.sol\":487:501  self.data[key] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract-iteratorMapping.sol\":487:507  self.data[key].value */\n      0x01\n      add\n        /* \"contract-iteratorMapping.sol\":487:515  self.data[key].value = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract-iteratorMapping.sol\":540:541  0 */\n      0x00\n        /* \"contract-iteratorMapping.sol\":529:537  keyIndex */\n      dup2\n        /* \"contract-iteratorMapping.sol\":529:541  keyIndex > 0 */\n      gt\n        /* \"contract-iteratorMapping.sol\":525:809  if (keyIndex > 0)... */\n      iszero\n      tag_32\n      jumpi\n        /* \"contract-iteratorMapping.sol\":562:566  true */\n      0x01\n        /* \"contract-iteratorMapping.sol\":555:566  return true */\n      swap2\n      pop\n      pop\n      jump(tag_31)\n        /* \"contract-iteratorMapping.sol\":525:809  if (keyIndex > 0)... */\n    tag_32:\n        /* \"contract-iteratorMapping.sol\":606:610  self */\n      dup5\n        /* \"contract-iteratorMapping.sol\":606:615  self.keys */\n      0x01\n      add\n        /* \"contract-iteratorMapping.sol\":606:622  self.keys.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contract-iteratorMapping.sol\":595:622  keyIndex = self.keys.length */\n      swap1\n      pop\n        /* \"contract-iteratorMapping.sol\":636:640  self */\n      dup5\n        /* \"contract-iteratorMapping.sol\":636:645  self.keys */\n      0x01\n      add\n        /* \"contract-iteratorMapping.sol\":636:652  self.keys.push() */\n      0x01\n      dup2\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      pop\n      pop\n        /* \"contract-iteratorMapping.sol\":703:704  1 */\n      0x01\n        /* \"contract-iteratorMapping.sol\":692:700  keyIndex */\n      dup2\n        /* \"contract-iteratorMapping.sol\":692:704  keyIndex + 1 */\n      tag_35\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_35:\n        /* \"contract-iteratorMapping.sol\":666:670  self */\n      dup6\n        /* \"contract-iteratorMapping.sol\":666:675  self.data */\n      0x00\n      add\n        /* \"contract-iteratorMapping.sol\":666:680  self.data[key] */\n      0x00\n        /* \"contract-iteratorMapping.sol\":676:679  key */\n      dup7\n        /* \"contract-iteratorMapping.sol\":666:680  self.data[key] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract-iteratorMapping.sol\":666:689  self.data[key].keyIndex */\n      0x00\n      add\n        /* \"contract-iteratorMapping.sol\":666:704  self.data[key].keyIndex = keyIndex + 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract-iteratorMapping.sol\":744:747  key */\n      dup4\n        /* \"contract-iteratorMapping.sol\":718:722  self */\n      dup6\n        /* \"contract-iteratorMapping.sol\":718:727  self.keys */\n      0x01\n      add\n        /* \"contract-iteratorMapping.sol\":728:736  keyIndex */\n      dup3\n        /* \"contract-iteratorMapping.sol\":718:737  self.keys[keyIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_36\n      jumpi\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n    tag_36:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contract-iteratorMapping.sol\":718:741  self.keys[keyIndex].key */\n      0x00\n      add\n        /* \"contract-iteratorMapping.sol\":718:747  self.keys[keyIndex].key = key */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract-iteratorMapping.sol\":761:765  self */\n      dup5\n        /* \"contract-iteratorMapping.sol\":761:770  self.size */\n      0x02\n      add\n      0x00\n        /* \"contract-iteratorMapping.sol\":761:772  self.size++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_40\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contract-iteratorMapping.sol\":793:798  false */\n      0x00\n        /* \"contract-iteratorMapping.sol\":786:798  return false */\n      swap2\n      pop\n      pop\n        /* \"contract-iteratorMapping.sol\":337:815  function insert(itmap storage self, uint key, uint value) internal returns (bool replaced) {... */\n    tag_31:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract-iteratorMapping.sol\":1315:1442  function iterateStart(itmap storage self) internal view returns (Iterator) {... */\n    tag_22:\n        /* \"contract-iteratorMapping.sol\":1380:1388  Iterator */\n      0x00\n        /* \"contract-iteratorMapping.sol\":1407:1435  iteratorSkipDeleted(self, 0) */\n      tag_43\n        /* \"contract-iteratorMapping.sol\":1427:1431  self */\n      dup3\n        /* \"contract-iteratorMapping.sol\":1433:1434  0 */\n      0x00\n        /* \"contract-iteratorMapping.sol\":1407:1426  iteratorSkipDeleted */\n      tag_44\n        /* \"contract-iteratorMapping.sol\":1407:1435  iteratorSkipDeleted(self, 0) */\n      jump\t// in\n    tag_43:\n        /* \"contract-iteratorMapping.sol\":1400:1435  return iteratorSkipDeleted(self, 0) */\n      swap1\n      pop\n        /* \"contract-iteratorMapping.sol\":1315:1442  function iterateStart(itmap storage self) internal view returns (Iterator) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract-iteratorMapping.sol\":1448:1606  function iterateValid(itmap storage self, Iterator iterator) internal view returns (bool) {... */\n    tag_24:\n        /* \"contract-iteratorMapping.sol\":1532:1536  bool */\n      0x00\n        /* \"contract-iteratorMapping.sol\":1583:1587  self */\n      dup3\n        /* \"contract-iteratorMapping.sol\":1583:1592  self.keys */\n      0x01\n      add\n        /* \"contract-iteratorMapping.sol\":1583:1599  self.keys.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contract-iteratorMapping.sol\":1571:1579  iterator */\n      dup3\n        /* \"contract-iteratorMapping.sol\":1555:1599  Iterator.unwrap(iterator) < self.keys.length */\n      lt\n        /* \"contract-iteratorMapping.sol\":1548:1599  return Iterator.unwrap(iterator) < self.keys.length */\n      swap1\n      pop\n        /* \"contract-iteratorMapping.sol\":1448:1606  function iterateValid(itmap storage self, Iterator iterator) internal view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract-iteratorMapping.sol\":1791:2030  function iterateGet(itmap storage self, Iterator iterator) internal view returns (uint key, uint value) {... */\n    tag_26:\n        /* \"contract-iteratorMapping.sol\":1873:1881  uint key */\n      0x00\n        /* \"contract-iteratorMapping.sol\":1883:1893  uint value */\n      dup1\n        /* \"contract-iteratorMapping.sol\":1905:1918  uint keyIndex */\n      0x00\n        /* \"contract-iteratorMapping.sol\":1937:1945  iterator */\n      dup4\n        /* \"contract-iteratorMapping.sol\":1905:1946  uint keyIndex = Iterator.unwrap(iterator) */\n      swap1\n      pop\n        /* \"contract-iteratorMapping.sol\":1962:1966  self */\n      dup5\n        /* \"contract-iteratorMapping.sol\":1962:1971  self.keys */\n      0x01\n      add\n        /* \"contract-iteratorMapping.sol\":1972:1980  keyIndex */\n      dup2\n        /* \"contract-iteratorMapping.sol\":1962:1981  self.keys[keyIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_47\n      jumpi\n      tag_48\n      tag_38\n      jump\t// in\n    tag_48:\n    tag_47:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contract-iteratorMapping.sol\":1962:1985  self.keys[keyIndex].key */\n      0x00\n      add\n      sload\n        /* \"contract-iteratorMapping.sol\":1956:1985  key = self.keys[keyIndex].key */\n      swap3\n      pop\n        /* \"contract-iteratorMapping.sol\":2003:2007  self */\n      dup5\n        /* \"contract-iteratorMapping.sol\":2003:2012  self.data */\n      0x00\n      add\n        /* \"contract-iteratorMapping.sol\":2003:2017  self.data[key] */\n      0x00\n        /* \"contract-iteratorMapping.sol\":2013:2016  key */\n      dup5\n        /* \"contract-iteratorMapping.sol\":2003:2017  self.data[key] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract-iteratorMapping.sol\":2003:2023  self.data[key].value */\n      0x01\n      add\n      sload\n        /* \"contract-iteratorMapping.sol\":1995:2023  value = self.data[key].value */\n      swap2\n      pop\n        /* \"contract-iteratorMapping.sol\":1895:2030  {... */\n      pop\n        /* \"contract-iteratorMapping.sol\":1791:2030  function iterateGet(itmap storage self, Iterator iterator) internal view returns (uint key, uint value) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"contract-iteratorMapping.sol\":1612:1785  function iterateNext(itmap storage self, Iterator iterator) internal view returns (Iterator) {... */\n    tag_30:\n        /* \"contract-iteratorMapping.sol\":1695:1703  Iterator */\n      0x00\n        /* \"contract-iteratorMapping.sol\":1722:1778  iteratorSkipDeleted(self, Iterator.unwrap(iterator) + 1) */\n      tag_51\n        /* \"contract-iteratorMapping.sol\":1742:1746  self */\n      dup4\n        /* \"contract-iteratorMapping.sol\":1776:1777  1 */\n      0x01\n        /* \"contract-iteratorMapping.sol\":1764:1772  iterator */\n      dup5\n        /* \"contract-iteratorMapping.sol\":1748:1777  Iterator.unwrap(iterator) + 1 */\n      tag_52\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_52:\n        /* \"contract-iteratorMapping.sol\":1722:1741  iteratorSkipDeleted */\n      tag_44\n        /* \"contract-iteratorMapping.sol\":1722:1778  iteratorSkipDeleted(self, Iterator.unwrap(iterator) + 1) */\n      jump\t// in\n    tag_51:\n        /* \"contract-iteratorMapping.sol\":1715:1778  return iteratorSkipDeleted(self, Iterator.unwrap(iterator) + 1) */\n      swap1\n      pop\n        /* \"contract-iteratorMapping.sol\":1612:1785  function iterateNext(itmap storage self, Iterator iterator) internal view returns (Iterator) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract-iteratorMapping.sol\":2059:2301  function iteratorSkipDeleted(itmap storage self, uint keyIndex) private view returns (Iterator) {... */\n    tag_44:\n        /* \"contract-iteratorMapping.sol\":2145:2153  Iterator */\n      0x00\n        /* \"contract-iteratorMapping.sol\":2165:2254  while (keyIndex < self.keys.length && self.keys[keyIndex].deleted)... */\n    tag_54:\n        /* \"contract-iteratorMapping.sol\":2183:2187  self */\n      dup3\n        /* \"contract-iteratorMapping.sol\":2183:2192  self.keys */\n      0x01\n      add\n        /* \"contract-iteratorMapping.sol\":2183:2199  self.keys.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contract-iteratorMapping.sol\":2172:2180  keyIndex */\n      dup3\n        /* \"contract-iteratorMapping.sol\":2172:2199  keyIndex < self.keys.length */\n      lt\n        /* \"contract-iteratorMapping.sol\":2172:2230  keyIndex < self.keys.length && self.keys[keyIndex].deleted */\n      dup1\n      iszero\n      tag_56\n      jumpi\n      pop\n        /* \"contract-iteratorMapping.sol\":2203:2207  self */\n      dup3\n        /* \"contract-iteratorMapping.sol\":2203:2212  self.keys */\n      0x01\n      add\n        /* \"contract-iteratorMapping.sol\":2213:2221  keyIndex */\n      dup3\n        /* \"contract-iteratorMapping.sol\":2203:2222  self.keys[keyIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_57\n      jumpi\n      tag_58\n      tag_38\n      jump\t// in\n    tag_58:\n    tag_57:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contract-iteratorMapping.sol\":2203:2230  self.keys[keyIndex].deleted */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contract-iteratorMapping.sol\":2172:2230  keyIndex < self.keys.length && self.keys[keyIndex].deleted */\n    tag_56:\n        /* \"contract-iteratorMapping.sol\":2165:2254  while (keyIndex < self.keys.length && self.keys[keyIndex].deleted)... */\n      iszero\n      tag_55\n      jumpi\n        /* \"contract-iteratorMapping.sol\":2244:2254  keyIndex++ */\n      dup2\n      dup1\n      tag_60\n      swap1\n      tag_41\n      jump\t// in\n    tag_60:\n      swap3\n      pop\n      pop\n        /* \"contract-iteratorMapping.sol\":2165:2254  while (keyIndex < self.keys.length && self.keys[keyIndex].deleted)... */\n      jump(tag_54)\n    tag_55:\n        /* \"contract-iteratorMapping.sol\":2285:2293  keyIndex */\n      dup2\n        /* \"contract-iteratorMapping.sol\":2264:2294  return Iterator.wrap(keyIndex) */\n      swap1\n      pop\n        /* \"contract-iteratorMapping.sol\":2059:2301  function iteratorSkipDeleted(itmap storage self, uint keyIndex) private view returns (Iterator) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_62:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_64:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_65:\n        /* \"#utility.yul\":490:514   */\n      tag_75\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_64\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_76\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_76:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_66:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_78\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_65\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1164   */\n    tag_7:\n        /* \"#utility.yul\":758:764   */\n      0x00\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":815:817   */\n      0x40\n        /* \"#utility.yul\":803:812   */\n      dup4\n        /* \"#utility.yul\":794:801   */\n      dup6\n        /* \"#utility.yul\":790:813   */\n      sub\n        /* \"#utility.yul\":786:818   */\n      slt\n        /* \"#utility.yul\":783:902   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":821:900   */\n      tag_81\n      tag_62\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":783:902   */\n    tag_80:\n        /* \"#utility.yul\":941:942   */\n      0x00\n        /* \"#utility.yul\":966:1019   */\n      tag_82\n        /* \"#utility.yul\":1011:1018   */\n      dup6\n        /* \"#utility.yul\":1002:1008   */\n      dup3\n        /* \"#utility.yul\":991:1000   */\n      dup7\n        /* \"#utility.yul\":987:1009   */\n      add\n        /* \"#utility.yul\":966:1019   */\n      tag_66\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":956:1019   */\n      swap3\n      pop\n        /* \"#utility.yul\":912:1029   */\n      pop\n        /* \"#utility.yul\":1068:1070   */\n      0x20\n        /* \"#utility.yul\":1094:1147   */\n      tag_83\n        /* \"#utility.yul\":1139:1146   */\n      dup6\n        /* \"#utility.yul\":1130:1136   */\n      dup3\n        /* \"#utility.yul\":1119:1128   */\n      dup7\n        /* \"#utility.yul\":1115:1137   */\n      add\n        /* \"#utility.yul\":1094:1147   */\n      tag_66\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1084:1147   */\n      swap2\n      pop\n        /* \"#utility.yul\":1039:1157   */\n      pop\n        /* \"#utility.yul\":690:1164   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1170:1288   */\n    tag_67:\n        /* \"#utility.yul\":1257:1281   */\n      tag_85\n        /* \"#utility.yul\":1275:1280   */\n      dup2\n        /* \"#utility.yul\":1257:1281   */\n      tag_64\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1252:1255   */\n      dup3\n        /* \"#utility.yul\":1245:1282   */\n      mstore\n        /* \"#utility.yul\":1170:1288   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1294:1516   */\n    tag_10:\n        /* \"#utility.yul\":1387:1391   */\n      0x00\n        /* \"#utility.yul\":1425:1427   */\n      0x20\n        /* \"#utility.yul\":1414:1423   */\n      dup3\n        /* \"#utility.yul\":1410:1428   */\n      add\n        /* \"#utility.yul\":1402:1428   */\n      swap1\n      pop\n        /* \"#utility.yul\":1438:1509   */\n      tag_87\n        /* \"#utility.yul\":1506:1507   */\n      0x00\n        /* \"#utility.yul\":1495:1504   */\n      dup4\n        /* \"#utility.yul\":1491:1508   */\n      add\n        /* \"#utility.yul\":1482:1488   */\n      dup5\n        /* \"#utility.yul\":1438:1509   */\n      tag_67\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1294:1516   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1522:1702   */\n    tag_68:\n        /* \"#utility.yul\":1570:1647   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1567:1568   */\n      0x00\n        /* \"#utility.yul\":1560:1648   */\n      mstore\n        /* \"#utility.yul\":1667:1671   */\n      0x11\n        /* \"#utility.yul\":1664:1665   */\n      0x04\n        /* \"#utility.yul\":1657:1672   */\n      mstore\n        /* \"#utility.yul\":1691:1695   */\n      0x24\n        /* \"#utility.yul\":1688:1689   */\n      0x00\n        /* \"#utility.yul\":1681:1696   */\n      revert\n        /* \"#utility.yul\":1708:1899   */\n    tag_28:\n        /* \"#utility.yul\":1748:1751   */\n      0x00\n        /* \"#utility.yul\":1767:1787   */\n      tag_90\n        /* \"#utility.yul\":1785:1786   */\n      dup3\n        /* \"#utility.yul\":1767:1787   */\n      tag_64\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":1762:1787   */\n      swap2\n      pop\n        /* \"#utility.yul\":1801:1821   */\n      tag_91\n        /* \"#utility.yul\":1819:1820   */\n      dup4\n        /* \"#utility.yul\":1801:1821   */\n      tag_64\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":1796:1821   */\n      swap3\n      pop\n        /* \"#utility.yul\":1844:1845   */\n      dup3\n        /* \"#utility.yul\":1841:1842   */\n      dup3\n        /* \"#utility.yul\":1837:1846   */\n      add\n        /* \"#utility.yul\":1830:1846   */\n      swap1\n      pop\n        /* \"#utility.yul\":1865:1868   */\n      dup1\n        /* \"#utility.yul\":1862:1863   */\n      dup3\n        /* \"#utility.yul\":1859:1869   */\n      gt\n        /* \"#utility.yul\":1856:1892   */\n      iszero\n      tag_92\n      jumpi\n        /* \"#utility.yul\":1872:1890   */\n      tag_93\n      tag_68\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1856:1892   */\n    tag_92:\n        /* \"#utility.yul\":1708:1899   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1905:2085   */\n    tag_38:\n        /* \"#utility.yul\":1953:2030   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1950:1951   */\n      0x00\n        /* \"#utility.yul\":1943:2031   */\n      mstore\n        /* \"#utility.yul\":2050:2054   */\n      0x32\n        /* \"#utility.yul\":2047:2048   */\n      0x04\n        /* \"#utility.yul\":2040:2055   */\n      mstore\n        /* \"#utility.yul\":2074:2078   */\n      0x24\n        /* \"#utility.yul\":2071:2072   */\n      0x00\n        /* \"#utility.yul\":2064:2079   */\n      revert\n        /* \"#utility.yul\":2091:2324   */\n    tag_41:\n        /* \"#utility.yul\":2130:2133   */\n      0x00\n        /* \"#utility.yul\":2153:2177   */\n      tag_96\n        /* \"#utility.yul\":2171:2176   */\n      dup3\n        /* \"#utility.yul\":2153:2177   */\n      tag_64\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2144:2177   */\n      swap2\n      pop\n        /* \"#utility.yul\":2199:2265   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2192:2197   */\n      dup3\n        /* \"#utility.yul\":2189:2266   */\n      sub\n        /* \"#utility.yul\":2186:2289   */\n      tag_97\n      jumpi\n        /* \"#utility.yul\":2269:2287   */\n      tag_98\n      tag_68\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":2186:2289   */\n    tag_97:\n        /* \"#utility.yul\":2316:2317   */\n      0x01\n        /* \"#utility.yul\":2309:2314   */\n      dup3\n        /* \"#utility.yul\":2305:2318   */\n      add\n        /* \"#utility.yul\":2298:2318   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2324   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220466670711d8c5370cb232fd2f23cad9c1b349bb5a06ba2fb8b119f36ad911fc064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506104d1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631d834a1b1461003b578063853255cc1461006b575b600080fd5b61005560048036038101906100509190610357565b610089565b60405161006291906103a6565b60405180910390f35b6100736100b0565b60405161008091906103a6565b60405180910390f35b60006100a1838360006101209092919063ffffffff16565b50600060020154905092915050565b6000806100bd6000610214565b90505b6100d481600061022890919063ffffffff16565b1561011c5760006100ef82600061023c90919063ffffffff16565b91505080836100fe91906103f0565b92505061011581600061029190919063ffffffff16565b90506100c0565b5090565b6000808460000160008581526020019081526020016000206000015490508285600001600086815260200190815260200160002060010181905550600081111561016e57600191505061020d565b8460010180549050905084600101600181600181540180825580915050039060005260206000209050506001816101a591906103f0565b85600001600086815260200190815260200160002060000181905550838560010182815481106101d8576101d7610424565b5b90600052602060002090600202016000018190555084600201600081548092919061020290610453565b919050555060009150505b9392505050565b60006102218260006102b1565b9050919050565b600082600101805490508210905092915050565b600080600083905084600101818154811061025a57610259610424565b5b9060005260206000209060020201600001549250846000016000848152602001908152602001600020600101549150509250929050565b60006102a9836001846102a491906103f0565b6102b1565b905092915050565b60005b8260010180549050821080156102fb57508260010182815481106102db576102da610424565b5b906000526020600020906002020160010160009054906101000a900460ff165b1561031357818061030b90610453565b9250506102b4565b81905092915050565b600080fd5b6000819050919050565b61033481610321565b811461033f57600080fd5b50565b6000813590506103518161032b565b92915050565b6000806040838503121561036e5761036d61031c565b5b600061037c85828601610342565b925050602061038d85828601610342565b9150509250929050565b6103a081610321565b82525050565b60006020820190506103bb6000830184610397565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103fb82610321565b915061040683610321565b925082820190508082111561041e5761041d6103c1565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061045e82610321565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036104905761048f6103c1565b5b60018201905091905056fea2646970667358221220466670711d8c5370cb232fd2f23cad9c1b349bb5a06ba2fb8b119f36ad911fc064736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D1 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D834A1B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x853255CC EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x357 JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0xA1 DUP4 DUP4 PUSH1 0x0 PUSH2 0x120 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBD PUSH1 0x0 PUSH2 0x214 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xD4 DUP2 PUSH1 0x0 PUSH2 0x228 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 PUSH2 0xEF DUP3 PUSH1 0x0 PUSH2 0x23C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP DUP1 DUP4 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x3F0 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x115 DUP2 PUSH1 0x0 PUSH2 0x291 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP3 DUP6 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x16E JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x20D JUMP JUMPDEST DUP5 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP DUP5 PUSH1 0x1 ADD PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP POP PUSH1 0x1 DUP2 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x3F0 JUMP JUMPDEST DUP6 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP6 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1D8 JUMPI PUSH2 0x1D7 PUSH2 0x424 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x2 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x202 SWAP1 PUSH2 0x453 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221 DUP3 PUSH1 0x0 PUSH2 0x2B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP DUP3 LT SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 SWAP1 POP DUP5 PUSH1 0x1 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x25A JUMPI PUSH2 0x259 PUSH2 0x424 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP3 POP DUP5 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A9 DUP4 PUSH1 0x1 DUP5 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x3F0 JUMP JUMPDEST PUSH2 0x2B1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP DUP3 LT DUP1 ISZERO PUSH2 0x2FB JUMPI POP DUP3 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2DB JUMPI PUSH2 0x2DA PUSH2 0x424 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x313 JUMPI DUP2 DUP1 PUSH2 0x30B SWAP1 PUSH2 0x453 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x2B4 JUMP JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x334 DUP2 PUSH2 0x321 JUMP JUMPDEST DUP2 EQ PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x351 DUP2 PUSH2 0x32B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36E JUMPI PUSH2 0x36D PUSH2 0x31C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37C DUP6 DUP3 DUP7 ADD PUSH2 0x342 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x38D DUP6 DUP3 DUP7 ADD PUSH2 0x342 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A0 DUP2 PUSH2 0x321 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3BB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x397 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3FB DUP3 PUSH2 0x321 JUMP JUMPDEST SWAP2 POP PUSH2 0x406 DUP4 PUSH2 0x321 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x41E JUMPI PUSH2 0x41D PUSH2 0x3C1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x45E DUP3 PUSH2 0x321 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x490 JUMPI PUSH2 0x48F PUSH2 0x3C1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID PUSH7 0x70711D8C5370CB 0x23 0x2F 0xD2 CALLCODE EXTCODECOPY 0xAD SWAP13 SHL CALLVALUE SWAP12 0xB5 LOG0 PUSH12 0xA2FB8B119F36AD911FC06473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "2322:802:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@insert_102": {
									"entryPoint": 288,
									"id": 102,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@insert_324": {
									"entryPoint": 137,
									"id": 324,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@iterateGet_264": {
									"entryPoint": 572,
									"id": 264,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@iterateNext_227": {
									"entryPoint": 657,
									"id": 227,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@iterateStart_183": {
									"entryPoint": 532,
									"id": 183,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@iterateValid_204": {
									"entryPoint": 552,
									"id": 204,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@iteratorSkipDeleted_296": {
									"entryPoint": 689,
									"id": 296,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sum_361": {
									"entryPoint": 176,
									"id": 361,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 961,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1060,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2327:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "773:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "819:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "821:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "821:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "821:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "803:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "790:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "815:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "786:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "786:32:1"
															},
															"nodeType": "YulIf",
															"src": "783:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "912:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "927:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "941:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "931:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "956:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "991:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1002:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1011:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "966:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "966:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "956:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1039:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1054:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1068:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1058:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1084:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1119:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1130:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1115:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1115:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1139:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1094:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1094:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1084:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "735:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "746:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "758:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "766:6:1",
														"type": ""
													}
												],
												"src": "690:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1235:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1252:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1275:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1257:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1257:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1245:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1245:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1245:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1223:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1230:3:1",
														"type": ""
													}
												],
												"src": "1170:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1392:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1402:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1414:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1425:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1410:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1410:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1402:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1482:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1495:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1506:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1491:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1491:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1438:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1438:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1438:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1364:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1376:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1387:4:1",
														"type": ""
													}
												],
												"src": "1294:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1550:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1567:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1570:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1560:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1560:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1560:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1664:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1667:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1657:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1657:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1688:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1691:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1681:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1681:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1681:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1522:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1752:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1762:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1785:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1767:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1762:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1796:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1819:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1801:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1801:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1796:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1830:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1841:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1844:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1837:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1837:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1830:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1870:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1872:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1872:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1872:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1862:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "1865:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1859:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1859:10:1"
															},
															"nodeType": "YulIf",
															"src": "1856:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1739:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1742:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1748:3:1",
														"type": ""
													}
												],
												"src": "1708:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1933:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1950:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1953:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1943:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1943:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1943:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2047:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2040:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2040:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2071:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2074:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2064:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2064:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2064:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "1905:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2134:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2144:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2171:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2153:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2153:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2144:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2267:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2269:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2269:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2269:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2192:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2199:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2189:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2189:77:1"
															},
															"nodeType": "YulIf",
															"src": "2186:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2309:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2316:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2298:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2120:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2130:3:1",
														"type": ""
													}
												],
												"src": "2091:233:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80631d834a1b1461003b578063853255cc1461006b575b600080fd5b61005560048036038101906100509190610357565b610089565b60405161006291906103a6565b60405180910390f35b6100736100b0565b60405161008091906103a6565b60405180910390f35b60006100a1838360006101209092919063ffffffff16565b50600060020154905092915050565b6000806100bd6000610214565b90505b6100d481600061022890919063ffffffff16565b1561011c5760006100ef82600061023c90919063ffffffff16565b91505080836100fe91906103f0565b92505061011581600061029190919063ffffffff16565b90506100c0565b5090565b6000808460000160008581526020019081526020016000206000015490508285600001600086815260200190815260200160002060010181905550600081111561016e57600191505061020d565b8460010180549050905084600101600181600181540180825580915050039060005260206000209050506001816101a591906103f0565b85600001600086815260200190815260200160002060000181905550838560010182815481106101d8576101d7610424565b5b90600052602060002090600202016000018190555084600201600081548092919061020290610453565b919050555060009150505b9392505050565b60006102218260006102b1565b9050919050565b600082600101805490508210905092915050565b600080600083905084600101818154811061025a57610259610424565b5b9060005260206000209060020201600001549250846000016000848152602001908152602001600020600101549150509250929050565b60006102a9836001846102a491906103f0565b6102b1565b905092915050565b60005b8260010180549050821080156102fb57508260010182815481106102db576102da610424565b5b906000526020600020906002020160010160009054906101000a900460ff165b1561031357818061030b90610453565b9250506102b4565b81905092915050565b600080fd5b6000819050919050565b61033481610321565b811461033f57600080fd5b50565b6000813590506103518161032b565b92915050565b6000806040838503121561036e5761036d61031c565b5b600061037c85828601610342565b925050602061038d85828601610342565b9150509250929050565b6103a081610321565b82525050565b60006020820190506103bb6000830184610397565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103fb82610321565b915061040683610321565b925082820190508082111561041e5761041d6103c1565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061045e82610321565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036104905761048f6103c1565b5b60018201905091905056fea2646970667358221220466670711d8c5370cb232fd2f23cad9c1b349bb5a06ba2fb8b119f36ad911fc064736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D834A1B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x853255CC EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x357 JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0xA1 DUP4 DUP4 PUSH1 0x0 PUSH2 0x120 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBD PUSH1 0x0 PUSH2 0x214 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xD4 DUP2 PUSH1 0x0 PUSH2 0x228 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 PUSH2 0xEF DUP3 PUSH1 0x0 PUSH2 0x23C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP DUP1 DUP4 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x3F0 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x115 DUP2 PUSH1 0x0 PUSH2 0x291 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP3 DUP6 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x16E JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x20D JUMP JUMPDEST DUP5 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP DUP5 PUSH1 0x1 ADD PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP POP PUSH1 0x1 DUP2 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x3F0 JUMP JUMPDEST DUP6 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP6 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1D8 JUMPI PUSH2 0x1D7 PUSH2 0x424 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x2 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x202 SWAP1 PUSH2 0x453 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221 DUP3 PUSH1 0x0 PUSH2 0x2B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP DUP3 LT SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 SWAP1 POP DUP5 PUSH1 0x1 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x25A JUMPI PUSH2 0x259 PUSH2 0x424 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP3 POP DUP5 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A9 DUP4 PUSH1 0x1 DUP5 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x3F0 JUMP JUMPDEST PUSH2 0x2B1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP DUP3 LT DUP1 ISZERO PUSH2 0x2FB JUMPI POP DUP3 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2DB JUMPI PUSH2 0x2DA PUSH2 0x424 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x313 JUMPI DUP2 DUP1 PUSH2 0x30B SWAP1 PUSH2 0x453 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x2B4 JUMP JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x334 DUP2 PUSH2 0x321 JUMP JUMPDEST DUP2 EQ PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x351 DUP2 PUSH2 0x32B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36E JUMPI PUSH2 0x36D PUSH2 0x31C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37C DUP6 DUP3 DUP7 ADD PUSH2 0x342 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x38D DUP6 DUP3 DUP7 ADD PUSH2 0x342 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A0 DUP2 PUSH2 0x321 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3BB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x397 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3FB DUP3 PUSH2 0x321 JUMP JUMPDEST SWAP2 POP PUSH2 0x406 DUP4 PUSH2 0x321 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x41E JUMPI PUSH2 0x41D PUSH2 0x3C1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x45E DUP3 PUSH2 0x321 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x490 JUMPI PUSH2 0x48F PUSH2 0x3C1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID PUSH7 0x70711D8C5370CB 0x23 0x2F 0xD2 CALLCODE EXTCODECOPY 0xAD SWAP13 SHL CALLVALUE SWAP12 0xB5 LOG0 PUSH12 0xA2FB8B119F36AD911FC06473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "2322:802:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2508:288;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2846:276;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2508:288;2556:9;2634:17;2646:1;2649;2634:4;:11;;:17;;;;;:::i;:::-;;2780:4;:9;;;2773:16;;2508:288;;;;:::o;2846:276::-;2882:6;2918:10;2931:19;:4;:17;:19::i;:::-;2918:32;;2900:216;2964:20;2982:1;2964:4;:17;;:20;;;;:::i;:::-;2900:216;;;3049:10;3063:18;3079:1;3063:4;:15;;:18;;;;:::i;:::-;3046:35;;;3100:5;3095:10;;;;;:::i;:::-;;;3032:84;3002:19;3019:1;3002:4;:16;;:19;;;;:::i;:::-;2998:23;;2900:216;;;;2846:276;:::o;337:478::-;413:13;438;454:4;:9;;:14;464:3;454:14;;;;;;;;;;;:23;;;438:39;;510:5;487:4;:9;;:14;497:3;487:14;;;;;;;;;;;:20;;:28;;;;540:1;529:8;:12;525:284;;;562:4;555:11;;;;;525:284;606:4;:9;;:16;;;;595:27;;636:4;:9;;:16;;;;;;;;;;;;;;;;;;;;;;;703:1;692:8;:12;;;;:::i;:::-;666:4;:9;;:14;676:3;666:14;;;;;;;;;;;:23;;:38;;;;744:3;718:4;:9;;728:8;718:19;;;;;;;;:::i;:::-;;;;;;;;;;;;:23;;:29;;;;761:4;:9;;;:11;;;;;;;;;:::i;:::-;;;;;;793:5;786:12;;;337:478;;;;;;:::o;1315:127::-;1380:8;1407:28;1427:4;1433:1;1407:19;:28::i;:::-;1400:35;;1315:127;;;:::o;1448:158::-;1532:4;1583;:9;;:16;;;;1571:8;1555:44;1548:51;;1448:158;;;;:::o;1791:239::-;1873:8;1883:10;1905:13;1937:8;1905:41;;1962:4;:9;;1972:8;1962:19;;;;;;;;:::i;:::-;;;;;;;;;;;;:23;;;1956:29;;2003:4;:9;;:14;2013:3;2003:14;;;;;;;;;;;:20;;;1995:28;;1895:135;1791:239;;;;;:::o;1612:173::-;1695:8;1722:56;1742:4;1776:1;1764:8;1748:29;;;;:::i;:::-;1722:19;:56::i;:::-;1715:63;;1612:173;;;;:::o;2059:242::-;2145:8;2165:89;2183:4;:9;;:16;;;;2172:8;:27;:58;;;;;2203:4;:9;;2213:8;2203:19;;;;;;;;:::i;:::-;;;;;;;;;;;;:27;;;;;;;;;;;;2172:58;2165:89;;;2244:10;;;;;:::i;:::-;;;;2165:89;;;2285:8;2264:30;;2059:242;;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:118::-;1257:24;1275:5;1257:24;:::i;:::-;1252:3;1245:37;1170:118;;:::o;1294:222::-;1387:4;1425:2;1414:9;1410:18;1402:26;;1438:71;1506:1;1495:9;1491:17;1482:6;1438:71;:::i;:::-;1294:222;;;;:::o;1522:180::-;1570:77;1567:1;1560:88;1667:4;1664:1;1657:15;1691:4;1688:1;1681:15;1708:191;1748:3;1767:20;1785:1;1767:20;:::i;:::-;1762:25;;1801:20;1819:1;1801:20;:::i;:::-;1796:25;;1844:1;1841;1837:9;1830:16;;1865:3;1862:1;1859:10;1856:36;;;1872:18;;:::i;:::-;1856:36;1708:191;;;;:::o;1905:180::-;1953:77;1950:1;1943:88;2050:4;2047:1;2040:15;2074:4;2071:1;2064:15;2091:233;2130:3;2153:24;2171:5;2153:24;:::i;:::-;2144:33;;2199:66;2192:5;2189:77;2186:103;;2269:18;;:::i;:::-;2186:103;2316:1;2309:5;2305:13;2298:20;;2091:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "246600",
								"executionCost": "287",
								"totalCost": "246887"
							},
							"external": {
								"insert(uint256,uint256)": "infinite",
								"sum()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2322,
									"end": 3124,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2322,
									"end": 3124,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2322,
									"end": 3124,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2322,
									"end": 3124,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2322,
									"end": 3124,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2322,
									"end": 3124,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2322,
									"end": 3124,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2322,
									"end": 3124,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2322,
									"end": 3124,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2322,
									"end": 3124,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2322,
									"end": 3124,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2322,
									"end": 3124,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2322,
									"end": 3124,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2322,
									"end": 3124,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2322,
									"end": 3124,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2322,
									"end": 3124,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2322,
									"end": 3124,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2322,
									"end": 3124,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2322,
									"end": 3124,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2322,
									"end": 3124,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2322,
									"end": 3124,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220466670711d8c5370cb232fd2f23cad9c1b349bb5a06ba2fb8b119f36ad911fc064736f6c63430008120033",
									".code": [
										{
											"begin": 2322,
											"end": 3124,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "PUSH",
											"source": 0,
											"value": "1D834A1B"
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "PUSH",
											"source": 0,
											"value": "853255CC"
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 3124,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2508,
											"end": 2796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2508,
											"end": 2796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2508,
											"end": 2796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3122,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2846,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2846,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2846,
											"end": 3122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3122,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2846,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3122,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2846,
											"end": 3122,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2846,
											"end": 3122,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2846,
											"end": 3122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3122,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2846,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3122,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2846,
											"end": 3122,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3122,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3122,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3122,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2646,
											"end": 2647,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2650,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2634,
											"end": 2645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2651,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2634,
											"end": 2651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2651,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2634,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2780,
											"end": 2784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2789,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2780,
											"end": 2789,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2780,
											"end": 2789,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3122,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2846,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2882,
											"end": 2888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2918,
											"end": 2928,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2931,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2931,
											"end": 2950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2950,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2931,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2918,
											"end": 2950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2918,
											"end": 2950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 3116,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2900,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2982,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2964,
											"end": 2981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2984,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2964,
											"end": 2984,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2984,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2964,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 3116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2900,
											"end": 3116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3049,
											"end": 3059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3063,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3079,
											"end": 3080,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3063,
											"end": 3067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3063,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3063,
											"end": 3078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3063,
											"end": 3081,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3063,
											"end": 3081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3063,
											"end": 3081,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3063,
											"end": 3081,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3063,
											"end": 3081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3063,
											"end": 3081,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3063,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3046,
											"end": 3081,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3046,
											"end": 3081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3046,
											"end": 3081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3105,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3095,
											"end": 3105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3095,
											"end": 3105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3105,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3095,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3105,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3032,
											"end": 3116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3019,
											"end": 3020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3002,
											"end": 3018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3002,
											"end": 3021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3021,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3002,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2998,
											"end": 3021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2998,
											"end": 3021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2900,
											"end": 3116,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 3116,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2900,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2900,
											"end": 3116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 337,
											"end": 815,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 337,
											"end": 815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 413,
											"end": 426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 438,
											"end": 451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 454,
											"end": 458,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 454,
											"end": 463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 454,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 467,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 454,
											"end": 468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 454,
											"end": 468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 454,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 454,
											"end": 468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 454,
											"end": 468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 454,
											"end": 468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 454,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 454,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 468,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 454,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 454,
											"end": 477,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 438,
											"end": 477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 438,
											"end": 477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 510,
											"end": 515,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 487,
											"end": 491,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 487,
											"end": 496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 487,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 500,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 487,
											"end": 501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 487,
											"end": 501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 487,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 487,
											"end": 501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 487,
											"end": 501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 487,
											"end": 501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 487,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 487,
											"end": 501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 487,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 501,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 487,
											"end": 507,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 487,
											"end": 507,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 487,
											"end": 515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 487,
											"end": 515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 515,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 487,
											"end": 515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 540,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 541,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 525,
											"end": 809,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 525,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 525,
											"end": 809,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 562,
											"end": 566,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 555,
											"end": 566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 555,
											"end": 566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 555,
											"end": 566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 555,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 555,
											"end": 566,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 525,
											"end": 809,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 525,
											"end": 809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 606,
											"end": 610,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 606,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 606,
											"end": 615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 606,
											"end": 622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 606,
											"end": 622,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 606,
											"end": 622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 606,
											"end": 622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 595,
											"end": 622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 636,
											"end": 640,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 636,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 636,
											"end": 645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 636,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 636,
											"end": 652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 636,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 636,
											"end": 652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 636,
											"end": 652,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 636,
											"end": 652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 636,
											"end": 652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 636,
											"end": 652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 636,
											"end": 652,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 636,
											"end": 652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 636,
											"end": 652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 636,
											"end": 652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 636,
											"end": 652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 636,
											"end": 652,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 636,
											"end": 652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 636,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 636,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 636,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 652,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 636,
											"end": 652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 636,
											"end": 652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 636,
											"end": 652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 703,
											"end": 704,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 692,
											"end": 700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 692,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 692,
											"end": 704,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 692,
											"end": 704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 692,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 692,
											"end": 704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 692,
											"end": 704,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 692,
											"end": 704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 666,
											"end": 670,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 666,
											"end": 675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 666,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 679,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 666,
											"end": 680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 666,
											"end": 680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 666,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 666,
											"end": 680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 666,
											"end": 680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 666,
											"end": 680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 666,
											"end": 680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 666,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 666,
											"end": 680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 666,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 680,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 666,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 666,
											"end": 704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 666,
											"end": 704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 666,
											"end": 704,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 666,
											"end": 704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 744,
											"end": 747,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 718,
											"end": 722,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 718,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 718,
											"end": 727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 728,
											"end": 736,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 718,
											"end": 737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 718,
											"end": 737,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 718,
											"end": 737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 718,
											"end": 737,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 718,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 718,
											"end": 737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 718,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 718,
											"end": 737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 718,
											"end": 737,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 718,
											"end": 737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 718,
											"end": 737,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 718,
											"end": 737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 718,
											"end": 737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 718,
											"end": 737,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 718,
											"end": 737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 737,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 718,
											"end": 737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 737,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 718,
											"end": 737,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 718,
											"end": 737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 718,
											"end": 741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 718,
											"end": 747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 718,
											"end": 747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 747,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 718,
											"end": 747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 761,
											"end": 765,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 761,
											"end": 770,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 761,
											"end": 770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 761,
											"end": 770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 761,
											"end": 772,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 761,
											"end": 772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 761,
											"end": 772,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 761,
											"end": 772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 761,
											"end": 772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 761,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 761,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 761,
											"end": 772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 761,
											"end": 772,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 761,
											"end": 772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 761,
											"end": 772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 761,
											"end": 772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 761,
											"end": 772,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 761,
											"end": 772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 786,
											"end": 798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 786,
											"end": 798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 337,
											"end": 815,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 337,
											"end": 815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 337,
											"end": 815,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 337,
											"end": 815,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 337,
											"end": 815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 337,
											"end": 815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 337,
											"end": 815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 337,
											"end": 815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1442,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1315,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1427,
											"end": 1431,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1407,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1407,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1442,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1606,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1448,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 1536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1583,
											"end": 1592,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1583,
											"end": 1592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1579,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1599,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1548,
											"end": 1599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1548,
											"end": 1599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1606,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 2030,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1791,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1873,
											"end": 1881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1883,
											"end": 1893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 1945,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1972,
											"end": 1980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1962,
											"end": 1981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 1985,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 1985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2007,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2016,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2017,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2023,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2003,
											"end": 2023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2023,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1995,
											"end": 2023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1995,
											"end": 2023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 2030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 2030,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 2030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 2030,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 2030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 2030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 2030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1785,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1612,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 1703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1742,
											"end": 1746,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1776,
											"end": 1777,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1764,
											"end": 1772,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1748,
											"end": 1777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1722,
											"end": 1778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1778,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1722,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1715,
											"end": 1778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1715,
											"end": 1778,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1785,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1612,
											"end": 1785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2301,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2059,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2165,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2183,
											"end": 2192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2199,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2199,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2230,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2172,
											"end": 2230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2207,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2212,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2203,
											"end": 2212,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2221,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2222,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2222,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2203,
											"end": 2222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2203,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2203,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2222,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2203,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2222,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2203,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2222,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2203,
											"end": 2222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2222,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2222,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2203,
											"end": 2222,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2230,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2172,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2165,
											"end": 2254,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2165,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2165,
											"end": 2254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2244,
											"end": 2254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2254,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2165,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2165,
											"end": 2254,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2165,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2165,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2301,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 758,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 812,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 794,
											"end": 801,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 786,
											"end": 818,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 821,
											"end": 900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 821,
											"end": 900,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1011,
											"end": 1018,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 966,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 912,
											"end": 1029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1139,
											"end": 1146,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1128,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1094,
											"end": 1147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1275,
											"end": 1280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1257,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1255,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1427,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1423,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1506,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1504,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 1488,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1438,
											"end": 1509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1509,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1438,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1702,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1522,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1567,
											"end": 1568,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1671,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1664,
											"end": 1665,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1657,
											"end": 1672,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1691,
											"end": 1695,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1696,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1708,
											"end": 1899,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1708,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1751,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1785,
											"end": 1786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1767,
											"end": 1787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1787,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1767,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1762,
											"end": 1787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1762,
											"end": 1787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1819,
											"end": 1820,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1801,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1821,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1801,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1845,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1869,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1892,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1856,
											"end": 1892,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1872,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1872,
											"end": 1890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1890,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1872,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1892,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1856,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1708,
											"end": 1899,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1708,
											"end": 1899,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1708,
											"end": 1899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1708,
											"end": 1899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1708,
											"end": 1899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1905,
											"end": 2085,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1905,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2030,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1950,
											"end": 1951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1943,
											"end": 2031,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2054,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2047,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2040,
											"end": 2055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2071,
											"end": 2072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2079,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2324,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2091,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2171,
											"end": 2176,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2153,
											"end": 2177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2177,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2153,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2192,
											"end": 2197,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2266,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2186,
											"end": 2289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2269,
											"end": 2287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2289,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2186,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2317,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2309,
											"end": 2314,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2324,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contract-iteratorMapping.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"insert(uint256,uint256)": "1d834a1b",
							"sum()": "853255cc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"k\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"v\",\"type\":\"uint256\"}],\"name\":\"insert\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"s\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-iteratorMapping.sol\":\"User\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-iteratorMapping.sol\":{\"keccak256\":\"0x63581d5fbc3390b688b4c24f1bf3c28c3cd2ccbcf3f9b7ef16986ce757992c0a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0a7b9a1cf232bdce93e8f1025aeca1341d23a1fae87f4cf024819c1699a4306\",\"dweb:/ipfs/QmSzG25uJEF5TZ2Kixr7fEu724hH6mQVpjNr95zX835Mqd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 300,
								"contract": "contract-iteratorMapping.sol:User",
								"label": "data",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(itmap)23_storage"
							}
						],
						"types": {
							"t_array(t_struct(KeyFlag)11_storage)dyn_storage": {
								"base": "t_struct(KeyFlag)11_storage",
								"encoding": "dynamic_array",
								"label": "struct KeyFlag[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_uint256,t_struct(IndexValue)6_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct IndexValue)",
								"numberOfBytes": "32",
								"value": "t_struct(IndexValue)6_storage"
							},
							"t_struct(IndexValue)6_storage": {
								"encoding": "inplace",
								"label": "struct IndexValue",
								"members": [
									{
										"astId": 3,
										"contract": "contract-iteratorMapping.sol:User",
										"label": "keyIndex",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 5,
										"contract": "contract-iteratorMapping.sol:User",
										"label": "value",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(KeyFlag)11_storage": {
								"encoding": "inplace",
								"label": "struct KeyFlag",
								"members": [
									{
										"astId": 8,
										"contract": "contract-iteratorMapping.sol:User",
										"label": "key",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 10,
										"contract": "contract-iteratorMapping.sol:User",
										"label": "deleted",
										"offset": 0,
										"slot": "1",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(itmap)23_storage": {
								"encoding": "inplace",
								"label": "struct itmap",
								"members": [
									{
										"astId": 16,
										"contract": "contract-iteratorMapping.sol:User",
										"label": "data",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_uint256,t_struct(IndexValue)6_storage)"
									},
									{
										"astId": 20,
										"contract": "contract-iteratorMapping.sol:User",
										"label": "keys",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_struct(KeyFlag)11_storage)dyn_storage"
									},
									{
										"astId": 22,
										"contract": "contract-iteratorMapping.sol:User",
										"label": "size",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contract-iteratorMapping.sol": {
				"ast": {
					"absolutePath": "contract-iteratorMapping.sol",
					"exportedSymbols": {
						"IndexValue": [
							6
						],
						"IterableMapping": [
							297
						],
						"Iterator": [
							25
						],
						"KeyFlag": [
							11
						],
						"User": [
							362
						],
						"itmap": [
							23
						]
					},
					"id": 363,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:0"
						},
						{
							"canonicalName": "IndexValue",
							"id": 6,
							"members": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "keyIndex",
									"nameLocation": "86:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 6,
									"src": "81:13:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "81:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "value",
									"nameLocation": "101:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 6,
									"src": "96:10:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "96:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "IndexValue",
							"nameLocation": "68:10:0",
							"nodeType": "StructDefinition",
							"scope": 363,
							"src": "61:48:0",
							"visibility": "public"
						},
						{
							"canonicalName": "KeyFlag",
							"id": 11,
							"members": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "key",
									"nameLocation": "132:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 11,
									"src": "127:8:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 7,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "127:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "deleted",
									"nameLocation": "142:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 11,
									"src": "137:12:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 9,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "137:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "KeyFlag",
							"nameLocation": "117:7:0",
							"nodeType": "StructDefinition",
							"scope": 363,
							"src": "110:42:0",
							"visibility": "public"
						},
						{
							"canonicalName": "itmap",
							"id": 23,
							"members": [
								{
									"constant": false,
									"id": 16,
									"mutability": "mutable",
									"name": "data",
									"nameLocation": "220:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 23,
									"src": "192:32:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IndexValue_$6_storage_$",
										"typeString": "mapping(uint256 => struct IndexValue)"
									},
									"typeName": {
										"id": 15,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 12,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "200:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "192:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IndexValue_$6_storage_$",
											"typeString": "mapping(uint256 => struct IndexValue)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 14,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 13,
												"name": "IndexValue",
												"nameLocations": [
													"208:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 6,
												"src": "208:10:0"
											},
											"referencedDeclaration": 6,
											"src": "208:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_IndexValue_$6_storage_ptr",
												"typeString": "struct IndexValue"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "keys",
									"nameLocation": "240:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 23,
									"src": "230:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_KeyFlag_$11_storage_$dyn_storage_ptr",
										"typeString": "struct KeyFlag[]"
									},
									"typeName": {
										"baseType": {
											"id": 18,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 17,
												"name": "KeyFlag",
												"nameLocations": [
													"230:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 11,
												"src": "230:7:0"
											},
											"referencedDeclaration": 11,
											"src": "230:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_KeyFlag_$11_storage_ptr",
												"typeString": "struct KeyFlag"
											}
										},
										"id": 19,
										"nodeType": "ArrayTypeName",
										"src": "230:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_KeyFlag_$11_storage_$dyn_storage_ptr",
											"typeString": "struct KeyFlag[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "size",
									"nameLocation": "255:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 23,
									"src": "250:9:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 21,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "250:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "itmap",
							"nameLocation": "180:5:0",
							"nodeType": "StructDefinition",
							"scope": 363,
							"src": "173:89:0",
							"visibility": "public"
						},
						{
							"canonicalName": "Iterator",
							"id": 25,
							"name": "Iterator",
							"nameLocation": "269:8:0",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "264:22:0",
							"underlyingType": {
								"id": 24,
								"name": "uint",
								"nodeType": "ElementaryTypeName",
								"src": "281:4:0",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IterableMapping",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 297,
							"linearizedBaseContracts": [
								297
							],
							"name": "IterableMapping",
							"nameLocation": "296:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "428:387:0",
										"statements": [
											{
												"assignments": [
													38
												],
												"declarations": [
													{
														"constant": false,
														"id": 38,
														"mutability": "mutable",
														"name": "keyIndex",
														"nameLocation": "443:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 101,
														"src": "438:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 37,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "438:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 44,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"expression": {
																"id": 39,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "454:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
																	"typeString": "struct itmap storage pointer"
																}
															},
															"id": 40,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "459:4:0",
															"memberName": "data",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 16,
															"src": "454:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IndexValue_$6_storage_$",
																"typeString": "mapping(uint256 => struct IndexValue storage ref)"
															}
														},
														"id": 42,
														"indexExpression": {
															"id": 41,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "464:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "454:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_IndexValue_$6_storage",
															"typeString": "struct IndexValue storage ref"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "469:8:0",
													"memberName": "keyIndex",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3,
													"src": "454:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "438:39:0"
											},
											{
												"expression": {
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 45,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "487:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
																		"typeString": "struct itmap storage pointer"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "492:4:0",
																"memberName": "data",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 16,
																"src": "487:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IndexValue_$6_storage_$",
																	"typeString": "mapping(uint256 => struct IndexValue storage ref)"
																}
															},
															"id": 49,
															"indexExpression": {
																"id": 47,
																"name": "key",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "497:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "487:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_IndexValue_$6_storage",
																"typeString": "struct IndexValue storage ref"
															}
														},
														"id": 50,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "502:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "487:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 51,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "510:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "487:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "487:28:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 54,
														"name": "keyIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "529:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "540:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "529:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 99,
													"nodeType": "Block",
													"src": "581:228:0",
													"statements": [
														{
															"expression": {
																"id": 63,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 59,
																	"name": "keyIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "595:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 60,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 28,
																			"src": "606:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
																				"typeString": "struct itmap storage pointer"
																			}
																		},
																		"id": 61,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "611:4:0",
																		"memberName": "keys",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 20,
																		"src": "606:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_KeyFlag_$11_storage_$dyn_storage",
																			"typeString": "struct KeyFlag storage ref[] storage ref"
																		}
																	},
																	"id": 62,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "616:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "606:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "595:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 64,
															"nodeType": "ExpressionStatement",
															"src": "595:27:0"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 65,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 28,
																			"src": "636:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
																				"typeString": "struct itmap storage pointer"
																			}
																		},
																		"id": 68,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "641:4:0",
																		"memberName": "keys",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 20,
																		"src": "636:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_KeyFlag_$11_storage_$dyn_storage",
																			"typeString": "struct KeyFlag storage ref[] storage ref"
																		}
																	},
																	"id": 69,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "646:4:0",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "636:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_KeyFlag_$11_storage_$dyn_storage_ptr_$returns$_t_struct$_KeyFlag_$11_storage_$attached_to$_t_array$_t_struct$_KeyFlag_$11_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct KeyFlag storage ref[] storage pointer) returns (struct KeyFlag storage ref)"
																	}
																},
																"id": 70,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "636:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_KeyFlag_$11_storage",
																	"typeString": "struct KeyFlag storage ref"
																}
															},
															"id": 71,
															"nodeType": "ExpressionStatement",
															"src": "636:16:0"
														},
														{
															"expression": {
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 72,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "666:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
																					"typeString": "struct itmap storage pointer"
																				}
																			},
																			"id": 75,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "671:4:0",
																			"memberName": "data",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 16,
																			"src": "666:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IndexValue_$6_storage_$",
																				"typeString": "mapping(uint256 => struct IndexValue storage ref)"
																			}
																		},
																		"id": 76,
																		"indexExpression": {
																			"id": 74,
																			"name": "key",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 30,
																			"src": "676:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "666:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_IndexValue_$6_storage",
																			"typeString": "struct IndexValue storage ref"
																		}
																	},
																	"id": 77,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "681:8:0",
																	"memberName": "keyIndex",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3,
																	"src": "666:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 80,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 78,
																		"name": "keyIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 38,
																		"src": "692:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 79,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "703:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "692:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "666:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 82,
															"nodeType": "ExpressionStatement",
															"src": "666:38:0"
														},
														{
															"expression": {
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 83,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "718:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
																					"typeString": "struct itmap storage pointer"
																				}
																			},
																			"id": 86,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "723:4:0",
																			"memberName": "keys",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 20,
																			"src": "718:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_KeyFlag_$11_storage_$dyn_storage",
																				"typeString": "struct KeyFlag storage ref[] storage ref"
																			}
																		},
																		"id": 87,
																		"indexExpression": {
																			"id": 85,
																			"name": "keyIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 38,
																			"src": "728:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "718:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_KeyFlag_$11_storage",
																			"typeString": "struct KeyFlag storage ref"
																		}
																	},
																	"id": 88,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "738:3:0",
																	"memberName": "key",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 8,
																	"src": "718:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 89,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "744:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "718:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 91,
															"nodeType": "ExpressionStatement",
															"src": "718:29:0"
														},
														{
															"expression": {
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "761:11:0",
																"subExpression": {
																	"expression": {
																		"id": 92,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "761:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
																			"typeString": "struct itmap storage pointer"
																		}
																	},
																	"id": 94,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "766:4:0",
																	"memberName": "size",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 22,
																	"src": "761:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 96,
															"nodeType": "ExpressionStatement",
															"src": "761:11:0"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "793:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 36,
															"id": 98,
															"nodeType": "Return",
															"src": "786:12:0"
														}
													]
												},
												"id": 100,
												"nodeType": "IfStatement",
												"src": "525:284:0",
												"trueBody": {
													"expression": {
														"hexValue": "74727565",
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "562:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"functionReturnParameters": 36,
													"id": 58,
													"nodeType": "Return",
													"src": "555:11:0"
												}
											}
										]
									},
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "insert",
									"nameLocation": "346:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "367:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "353:18:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
													"typeString": "struct itmap"
												},
												"typeName": {
													"id": 27,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 26,
														"name": "itmap",
														"nameLocations": [
															"353:5:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 23,
														"src": "353:5:0"
													},
													"referencedDeclaration": 23,
													"src": "353:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
														"typeString": "struct itmap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "378:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "373:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "373:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "388:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "383:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "383:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "352:42:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "replaced",
												"nameLocation": "418:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "413:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 34,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "413:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "412:15:0"
									},
									"scope": 297,
									"src": "337:478:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "918:210:0",
										"statements": [
											{
												"assignments": [
													113
												],
												"declarations": [
													{
														"constant": false,
														"id": 113,
														"mutability": "mutable",
														"name": "keyIndex",
														"nameLocation": "933:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 148,
														"src": "928:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 112,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "928:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 119,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"expression": {
																"id": 114,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "944:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
																	"typeString": "struct itmap storage pointer"
																}
															},
															"id": 115,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "949:4:0",
															"memberName": "data",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 16,
															"src": "944:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IndexValue_$6_storage_$",
																"typeString": "mapping(uint256 => struct IndexValue storage ref)"
															}
														},
														"id": 117,
														"indexExpression": {
															"id": 116,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "954:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "944:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_IndexValue_$6_storage",
															"typeString": "struct IndexValue storage ref"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "959:8:0",
													"memberName": "keyIndex",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3,
													"src": "944:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "928:39:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 120,
														"name": "keyIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "981:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "993:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "981:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 125,
												"nodeType": "IfStatement",
												"src": "977:43:0",
												"trueBody": {
													"expression": {
														"hexValue": "66616c7365",
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1015:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 111,
													"id": 124,
													"nodeType": "Return",
													"src": "1008:12:0"
												}
											},
											{
												"expression": {
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1030:21:0",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 126,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "1037:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
																	"typeString": "struct itmap storage pointer"
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1042:4:0",
															"memberName": "data",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 16,
															"src": "1037:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IndexValue_$6_storage_$",
																"typeString": "mapping(uint256 => struct IndexValue storage ref)"
															}
														},
														"id": 129,
														"indexExpression": {
															"id": 128,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "1047:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1037:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_IndexValue_$6_storage",
															"typeString": "struct IndexValue storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "1030:21:0"
											},
											{
												"expression": {
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 132,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "1061:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
																		"typeString": "struct itmap storage pointer"
																	}
																},
																"id": 137,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1066:4:0",
																"memberName": "keys",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 20,
																"src": "1061:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_KeyFlag_$11_storage_$dyn_storage",
																	"typeString": "struct KeyFlag storage ref[] storage ref"
																}
															},
															"id": 138,
															"indexExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 134,
																	"name": "keyIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "1071:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1082:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1071:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1061:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_KeyFlag_$11_storage",
																"typeString": "struct KeyFlag storage ref"
															}
														},
														"id": 139,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1085:7:0",
														"memberName": "deleted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "1061:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1095:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1061:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "1061:38:0"
											},
											{
												"expression": {
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "1109:12:0",
													"subExpression": {
														"expression": {
															"id": 143,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "1109:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
																"typeString": "struct itmap storage pointer"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1114:4:0",
														"memberName": "size",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "1109:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "1109:12:0"
											}
										]
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "849:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "870:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "856:18:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
													"typeString": "struct itmap"
												},
												"typeName": {
													"id": 104,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 103,
														"name": "itmap",
														"nameLocations": [
															"856:5:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 23,
														"src": "856:5:0"
													},
													"referencedDeclaration": 23,
													"src": "856:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
														"typeString": "struct itmap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "881:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "876:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "876:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:30:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "909:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "904:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 109,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "904:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "903:14:0"
									},
									"scope": 297,
									"src": "840:288:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "1236:51:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 159,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "1253:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
																		"typeString": "struct itmap storage pointer"
																	}
																},
																"id": 160,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1258:4:0",
																"memberName": "data",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 16,
																"src": "1253:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IndexValue_$6_storage_$",
																	"typeString": "mapping(uint256 => struct IndexValue storage ref)"
																}
															},
															"id": 162,
															"indexExpression": {
																"id": 161,
																"name": "key",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 154,
																"src": "1263:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1253:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_IndexValue_$6_storage",
																"typeString": "struct IndexValue storage ref"
															}
														},
														"id": 163,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1268:8:0",
														"memberName": "keyIndex",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1253:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1279:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1253:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 158,
												"id": 166,
												"nodeType": "Return",
												"src": "1246:34:0"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "1168:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "1191:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1177:18:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
													"typeString": "struct itmap"
												},
												"typeName": {
													"id": 151,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 150,
														"name": "itmap",
														"nameLocations": [
															"1177:5:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 23,
														"src": "1177:5:0"
													},
													"referencedDeclaration": 23,
													"src": "1177:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
														"typeString": "struct itmap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1202:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1197:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1197:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:30:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1230:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 156,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1230:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:6:0"
									},
									"scope": 297,
									"src": "1159:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "1390:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 178,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "1427:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
																"typeString": "struct itmap storage pointer"
															}
														},
														{
															"hexValue": "30",
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1433:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
																"typeString": "struct itmap storage pointer"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 177,
														"name": "iteratorSkipDeleted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "1407:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_itmap_$23_storage_ptr_$_t_uint256_$returns$_t_userDefinedValueType$_Iterator_$25_$",
															"typeString": "function (struct itmap storage pointer,uint256) view returns (Iterator)"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1407:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
														"typeString": "Iterator"
													}
												},
												"functionReturnParameters": 176,
												"id": 181,
												"nodeType": "Return",
												"src": "1400:35:0"
											}
										]
									},
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "iterateStart",
									"nameLocation": "1324:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "1351:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1337:18:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
													"typeString": "struct itmap"
												},
												"typeName": {
													"id": 170,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 169,
														"name": "itmap",
														"nameLocations": [
															"1337:5:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 23,
														"src": "1337:5:0"
													},
													"referencedDeclaration": 23,
													"src": "1337:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
														"typeString": "struct itmap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1336:20:0"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1380:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
													"typeString": "Iterator"
												},
												"typeName": {
													"id": 174,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 173,
														"name": "Iterator",
														"nameLocations": [
															"1380:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "1380:8:0"
													},
													"referencedDeclaration": 25,
													"src": "1380:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
														"typeString": "Iterator"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1379:10:0"
									},
									"scope": 297,
									"src": "1315:127:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "1538:68:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 196,
																"name": "iterator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "1571:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
																	"typeString": "Iterator"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
																	"typeString": "Iterator"
																}
															],
															"expression": {
																"id": 194,
																"name": "Iterator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "1555:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_Iterator_$25_$",
																	"typeString": "type(Iterator)"
																}
															},
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1564:6:0",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "1555:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Iterator_$25_$returns$_t_uint256_$",
																"typeString": "function (Iterator) pure returns (uint256)"
															}
														},
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1555:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 198,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "1583:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
																	"typeString": "struct itmap storage pointer"
																}
															},
															"id": 199,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1588:4:0",
															"memberName": "keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 20,
															"src": "1583:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_KeyFlag_$11_storage_$dyn_storage",
																"typeString": "struct KeyFlag storage ref[] storage ref"
															}
														},
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1593:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1583:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1555:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 193,
												"id": 202,
												"nodeType": "Return",
												"src": "1548:51:0"
											}
										]
									},
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "iterateValid",
									"nameLocation": "1457:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "1484:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1470:18:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
													"typeString": "struct itmap"
												},
												"typeName": {
													"id": 185,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 184,
														"name": "itmap",
														"nameLocations": [
															"1470:5:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 23,
														"src": "1470:5:0"
													},
													"referencedDeclaration": 23,
													"src": "1470:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
														"typeString": "struct itmap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "iterator",
												"nameLocation": "1499:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1490:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
													"typeString": "Iterator"
												},
												"typeName": {
													"id": 188,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 187,
														"name": "Iterator",
														"nameLocations": [
															"1490:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "1490:8:0"
													},
													"referencedDeclaration": 25,
													"src": "1490:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
														"typeString": "Iterator"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1469:39:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1532:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 191,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1532:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1531:6:0"
									},
									"scope": 297,
									"src": "1448:158:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "1705:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 217,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "1742:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
																"typeString": "struct itmap storage pointer"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 220,
																		"name": "iterator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "1764:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
																			"typeString": "Iterator"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
																			"typeString": "Iterator"
																		}
																	],
																	"expression": {
																		"id": 218,
																		"name": "Iterator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "1748:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_Iterator_$25_$",
																			"typeString": "type(Iterator)"
																		}
																	},
																	"id": 219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1757:6:0",
																	"memberName": "unwrap",
																	"nodeType": "MemberAccess",
																	"src": "1748:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Iterator_$25_$returns$_t_uint256_$",
																		"typeString": "function (Iterator) pure returns (uint256)"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1748:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1776:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1748:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
																"typeString": "struct itmap storage pointer"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 216,
														"name": "iteratorSkipDeleted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "1722:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_itmap_$23_storage_ptr_$_t_uint256_$returns$_t_userDefinedValueType$_Iterator_$25_$",
															"typeString": "function (struct itmap storage pointer,uint256) view returns (Iterator)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1722:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
														"typeString": "Iterator"
													}
												},
												"functionReturnParameters": 215,
												"id": 225,
												"nodeType": "Return",
												"src": "1715:63:0"
											}
										]
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "iterateNext",
									"nameLocation": "1621:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "1647:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1633:18:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
													"typeString": "struct itmap"
												},
												"typeName": {
													"id": 206,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 205,
														"name": "itmap",
														"nameLocations": [
															"1633:5:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 23,
														"src": "1633:5:0"
													},
													"referencedDeclaration": 23,
													"src": "1633:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
														"typeString": "struct itmap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "iterator",
												"nameLocation": "1662:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1653:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
													"typeString": "Iterator"
												},
												"typeName": {
													"id": 209,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 208,
														"name": "Iterator",
														"nameLocations": [
															"1653:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "1653:8:0"
													},
													"referencedDeclaration": 25,
													"src": "1653:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
														"typeString": "Iterator"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1632:39:0"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1695:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
													"typeString": "Iterator"
												},
												"typeName": {
													"id": 213,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 212,
														"name": "Iterator",
														"nameLocations": [
															"1695:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "1695:8:0"
													},
													"referencedDeclaration": 25,
													"src": "1695:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
														"typeString": "Iterator"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1694:10:0"
									},
									"scope": 297,
									"src": "1612:173:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "1895:135:0",
										"statements": [
											{
												"assignments": [
													241
												],
												"declarations": [
													{
														"constant": false,
														"id": 241,
														"mutability": "mutable",
														"name": "keyIndex",
														"nameLocation": "1910:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "1905:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 240,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1905:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"arguments": [
														{
															"id": 244,
															"name": "iterator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "1937:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
																"typeString": "Iterator"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
																"typeString": "Iterator"
															}
														],
														"expression": {
															"id": 242,
															"name": "Iterator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "1921:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_Iterator_$25_$",
																"typeString": "type(Iterator)"
															}
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1930:6:0",
														"memberName": "unwrap",
														"nodeType": "MemberAccess",
														"src": "1921:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Iterator_$25_$returns$_t_uint256_$",
															"typeString": "function (Iterator) pure returns (uint256)"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1921:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1905:41:0"
											},
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 247,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "1956:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 248,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "1962:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
																		"typeString": "struct itmap storage pointer"
																	}
																},
																"id": 249,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1967:4:0",
																"memberName": "keys",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 20,
																"src": "1962:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_KeyFlag_$11_storage_$dyn_storage",
																	"typeString": "struct KeyFlag storage ref[] storage ref"
																}
															},
															"id": 251,
															"indexExpression": {
																"id": 250,
																"name": "keyIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "1972:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1962:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_KeyFlag_$11_storage",
																"typeString": "struct KeyFlag storage ref"
															}
														},
														"id": 252,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1982:3:0",
														"memberName": "key",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "1962:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1956:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1956:29:0"
											},
											{
												"expression": {
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 255,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "1995:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 256,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "2003:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
																		"typeString": "struct itmap storage pointer"
																	}
																},
																"id": 257,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2008:4:0",
																"memberName": "data",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 16,
																"src": "2003:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_IndexValue_$6_storage_$",
																	"typeString": "mapping(uint256 => struct IndexValue storage ref)"
																}
															},
															"id": 259,
															"indexExpression": {
																"id": 258,
																"name": "key",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "2013:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2003:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_IndexValue_$6_storage",
																"typeString": "struct IndexValue storage ref"
															}
														},
														"id": 260,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2018:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "2003:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1995:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 262,
												"nodeType": "ExpressionStatement",
												"src": "1995:28:0"
											}
										]
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "iterateGet",
									"nameLocation": "1800:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "1825:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1811:18:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
													"typeString": "struct itmap"
												},
												"typeName": {
													"id": 229,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 228,
														"name": "itmap",
														"nameLocations": [
															"1811:5:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 23,
														"src": "1811:5:0"
													},
													"referencedDeclaration": 23,
													"src": "1811:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
														"typeString": "struct itmap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "iterator",
												"nameLocation": "1840:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1831:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
													"typeString": "Iterator"
												},
												"typeName": {
													"id": 232,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 231,
														"name": "Iterator",
														"nameLocations": [
															"1831:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "1831:8:0"
													},
													"referencedDeclaration": 25,
													"src": "1831:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
														"typeString": "Iterator"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1810:39:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1878:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1873:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1873:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1888:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1883:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1883:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1872:22:0"
									},
									"scope": 297,
									"src": "1791:239:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "2155:146:0",
										"statements": [
											{
												"body": {
													"expression": {
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2244:10:0",
														"subExpression": {
															"id": 286,
															"name": "keyIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "2244:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 288,
													"nodeType": "ExpressionStatement",
													"src": "2244:10:0"
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 275,
															"name": "keyIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "2172:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"expression": {
																	"id": 276,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "2183:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
																		"typeString": "struct itmap storage pointer"
																	}
																},
																"id": 277,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2188:4:0",
																"memberName": "keys",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 20,
																"src": "2183:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_KeyFlag_$11_storage_$dyn_storage",
																	"typeString": "struct KeyFlag storage ref[] storage ref"
																}
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2193:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2183:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2172:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 280,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "2203:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
																		"typeString": "struct itmap storage pointer"
																	}
																},
																"id": 281,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2208:4:0",
																"memberName": "keys",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 20,
																"src": "2203:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_KeyFlag_$11_storage_$dyn_storage",
																	"typeString": "struct KeyFlag storage ref[] storage ref"
																}
															},
															"id": 283,
															"indexExpression": {
																"id": 282,
																"name": "keyIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "2213:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2203:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_KeyFlag_$11_storage",
																"typeString": "struct KeyFlag storage ref"
															}
														},
														"id": 284,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2223:7:0",
														"memberName": "deleted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "2203:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2172:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 289,
												"nodeType": "WhileStatement",
												"src": "2165:89:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 292,
															"name": "keyIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "2285:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 290,
															"name": "Iterator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "2271:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_Iterator_$25_$",
																"typeString": "type(Iterator)"
															}
														},
														"id": 291,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2280:4:0",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "2271:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_uint256_$returns$_t_userDefinedValueType$_Iterator_$25_$",
															"typeString": "function (uint256) pure returns (Iterator)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2271:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
														"typeString": "Iterator"
													}
												},
												"functionReturnParameters": 274,
												"id": 294,
												"nodeType": "Return",
												"src": "2264:30:0"
											}
										]
									},
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "iteratorSkipDeleted",
									"nameLocation": "2068:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "2102:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2088:18:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
													"typeString": "struct itmap"
												},
												"typeName": {
													"id": 266,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 265,
														"name": "itmap",
														"nameLocations": [
															"2088:5:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 23,
														"src": "2088:5:0"
													},
													"referencedDeclaration": 23,
													"src": "2088:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
														"typeString": "struct itmap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "keyIndex",
												"nameLocation": "2113:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2108:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2108:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:35:0"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2145:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
													"typeString": "Iterator"
												},
												"typeName": {
													"id": 272,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 271,
														"name": "Iterator",
														"nameLocations": [
															"2145:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "2145:8:0"
													},
													"referencedDeclaration": 25,
													"src": "2145:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
														"typeString": "Iterator"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2144:10:0"
									},
									"scope": 297,
									"src": "2059:242:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 363,
							"src": "288:2015:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "User",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362
							],
							"name": "User",
							"nameLocation": "2331:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 300,
									"mutability": "mutable",
									"name": "data",
									"nameLocation": "2387:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 362,
									"src": "2381:10:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_itmap_$23_storage",
										"typeString": "struct itmap"
									},
									"typeName": {
										"id": 299,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 298,
											"name": "itmap",
											"nameLocations": [
												"2381:5:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 23,
											"src": "2381:5:0"
										},
										"referencedDeclaration": 23,
										"src": "2381:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
											"typeString": "struct itmap"
										}
									},
									"visibility": "internal"
								},
								{
									"global": false,
									"id": 304,
									"libraryName": {
										"id": 301,
										"name": "IterableMapping",
										"nameLocations": [
											"2452:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 297,
										"src": "2452:15:0"
									},
									"nodeType": "UsingForDirective",
									"src": "2446:32:0",
									"typeName": {
										"id": 303,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 302,
											"name": "itmap",
											"nameLocations": [
												"2472:5:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 23,
											"src": "2472:5:0"
										},
										"referencedDeclaration": 23,
										"src": "2472:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_itmap_$23_storage_ptr",
											"typeString": "struct itmap"
										}
									}
								},
								{
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "2567:229:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 316,
															"name": "k",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "2646:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 317,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "2649:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 313,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "2634:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_itmap_$23_storage",
																"typeString": "struct itmap storage ref"
															}
														},
														"id": 315,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2639:6:0",
														"memberName": "insert",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "2634:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_itmap_$23_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_itmap_$23_storage_ptr_$",
															"typeString": "function (struct itmap storage pointer,uint256,uint256) returns (bool)"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2634:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "2634:17:0"
											},
											{
												"expression": {
													"expression": {
														"id": 320,
														"name": "data",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2780:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_itmap_$23_storage",
															"typeString": "struct itmap storage ref"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2785:4:0",
													"memberName": "size",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 22,
													"src": "2780:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 312,
												"id": 322,
												"nodeType": "Return",
												"src": "2773:16:0"
											}
										]
									},
									"functionSelector": "1d834a1b",
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "insert",
									"nameLocation": "2517:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "k",
												"nameLocation": "2529:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "2524:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2524:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "2537:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "2532:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2532:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2523:16:0"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "size",
												"nameLocation": "2561:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "2556:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2556:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2555:11:0"
									},
									"scope": 362,
									"src": "2508:288:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "2890:232:0",
										"statements": [
											{
												"body": {
													"id": 358,
													"nodeType": "Block",
													"src": "3032:84:0",
													"statements": [
														{
															"assignments": [
																null,
																348
															],
															"declarations": [
																null,
																{
																	"constant": false,
																	"id": 348,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "3054:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 358,
																	"src": "3049:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 347,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3049:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 353,
															"initialValue": {
																"arguments": [
																	{
																		"id": 351,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 331,
																		"src": "3079:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
																			"typeString": "Iterator"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
																			"typeString": "Iterator"
																		}
																	],
																	"expression": {
																		"id": 349,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 300,
																		"src": "3063:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_itmap_$23_storage",
																			"typeString": "struct itmap storage ref"
																		}
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3068:10:0",
																	"memberName": "iterateGet",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 264,
																	"src": "3063:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_itmap_$23_storage_ptr_$_t_userDefinedValueType$_Iterator_$25_$returns$_t_uint256_$_t_uint256_$attached_to$_t_struct$_itmap_$23_storage_ptr_$",
																		"typeString": "function (struct itmap storage pointer,Iterator) view returns (uint256,uint256)"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3063:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3046:35:0"
														},
														{
															"expression": {
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 354,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "3095:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 355,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 348,
																	"src": "3100:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3095:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 357,
															"nodeType": "ExpressionStatement",
															"src": "3095:10:0"
														}
													]
												},
												"condition": {
													"arguments": [
														{
															"id": 338,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2982:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
																"typeString": "Iterator"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
																"typeString": "Iterator"
															}
														],
														"expression": {
															"id": 336,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "2964:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_itmap_$23_storage",
																"typeString": "struct itmap storage ref"
															}
														},
														"id": 337,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2969:12:0",
														"memberName": "iterateValid",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "2964:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_itmap_$23_storage_ptr_$_t_userDefinedValueType$_Iterator_$25_$returns$_t_bool_$attached_to$_t_struct$_itmap_$23_storage_ptr_$",
															"typeString": "function (struct itmap storage pointer,Iterator) view returns (bool)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2964:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 359,
												"initializationExpression": {
													"assignments": [
														331
													],
													"declarations": [
														{
															"constant": false,
															"id": 331,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2927:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 359,
															"src": "2918:10:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
																"typeString": "Iterator"
															},
															"typeName": {
																"id": 330,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 329,
																	"name": "Iterator",
																	"nameLocations": [
																		"2918:8:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 25,
																	"src": "2918:8:0"
																},
																"referencedDeclaration": 25,
																"src": "2918:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
																	"typeString": "Iterator"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 335,
													"initialValue": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 332,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "2931:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_itmap_$23_storage",
																	"typeString": "struct itmap storage ref"
																}
															},
															"id": 333,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2936:12:0",
															"memberName": "iterateStart",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 183,
															"src": "2931:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_itmap_$23_storage_ptr_$returns$_t_userDefinedValueType$_Iterator_$25_$attached_to$_t_struct$_itmap_$23_storage_ptr_$",
																"typeString": "function (struct itmap storage pointer) view returns (Iterator)"
															}
														},
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2931:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
															"typeString": "Iterator"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2918:32:0"
												},
												"loopExpression": {
													"expression": {
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 340,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2998:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
																"typeString": "Iterator"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"id": 343,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "3019:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
																		"typeString": "Iterator"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
																		"typeString": "Iterator"
																	}
																],
																"expression": {
																	"id": 341,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "3002:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_itmap_$23_storage",
																		"typeString": "struct itmap storage ref"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3007:11:0",
																"memberName": "iterateNext",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 227,
																"src": "3002:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_itmap_$23_storage_ptr_$_t_userDefinedValueType$_Iterator_$25_$returns$_t_userDefinedValueType$_Iterator_$25_$attached_to$_t_struct$_itmap_$23_storage_ptr_$",
																	"typeString": "function (struct itmap storage pointer,Iterator) view returns (Iterator)"
																}
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3002:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
																"typeString": "Iterator"
															}
														},
														"src": "2998:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_Iterator_$25",
															"typeString": "Iterator"
														}
													},
													"id": 346,
													"nodeType": "ExpressionStatement",
													"src": "2998:23:0"
												},
												"nodeType": "ForStatement",
												"src": "2900:216:0"
											}
										]
									},
									"functionSelector": "853255cc",
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sum",
									"nameLocation": "2855:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2858:2:0"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "2887:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2882:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2882:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:8:0"
									},
									"scope": 362,
									"src": "2846:276:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 363,
							"src": "2322:802:0",
							"usedErrors": []
						}
					],
					"src": "36:3088:0"
				},
				"id": 0
			}
		}
	}
}